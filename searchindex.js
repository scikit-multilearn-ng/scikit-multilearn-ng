Search.setIndex({"alltitles": {"Attributes": [[5, "attributes"], [5, "id3"], [5, "id30"], [6, "attributes"], [7, "attributes"], [9, "attributes"], [9, "id5"], [9, "id15"], [9, "id27"], [11, "attributes"], [13, "attributes"], [13, "id10"], [13, "id22"], [13, "id35"], [13, "id48"], [13, "id65"], [13, "id75"], [14, "attributes"], [14, "id1"]], "Basic Usage": [[0, "basic-usage"]], "Benchmark": [[1, null]], "Contributing": [[0, "contributing"]], "Examples": [[5, "examples"], [5, "id5"], [5, "id10"], [5, "id21"], [5, "id32"], [7, "examples"], [7, "id7"], [7, "id14"], [9, "examples"], [9, "id6"], [9, "id17"], [9, "id29"], [11, "examples"], [13, "examples"], [13, "id11"], [13, "id24"], [13, "id37"], [13, "id50"], [13, "id67"], [13, "id76"], [14, "examples"]], "Features": [[0, "features"]], "GPL library dependency": [[2, "gpl-library-dependency"]], "Indices and tables": [[0, "indices-and-tables"]], "Installation & Dependencies": [[0, "installation-dependencies"]], "License": [[2, null]], "Methods": [[14, "methods"]], "Multi-label classification module for Python": [[4, "multi-label-classification-module-for-python"]], "Notes": [[13, "notes"], [13, "id2"], [13, "id14"], [13, "id27"], [13, "id40"], [13, "id49"], [13, "id53"], [13, "id79"], [13, "id82"], [14, "notes"]], "Parameters": [[4, "parameters"], [4, "id1"], [4, "id3"], [4, "id5"], [4, "id7"], [4, "id9"], [4, "id11"], [4, "id12"], [4, "id14"], [4, "id16"], [5, "parameters"], [5, "id1"], [5, "id2"], [5, "id6"], [5, "id8"], [5, "id11"], [5, "id13"], [5, "id15"], [5, "id17"], [5, "id19"], [5, "id22"], [5, "id24"], [5, "id27"], [5, "id29"], [5, "id33"], [5, "id35"], [5, "id37"], [5, "id39"], [6, "parameters"], [6, "id1"], [6, "id3"], [6, "id6"], [6, "id8"], [6, "id9"], [7, "parameters"], [7, "id1"], [7, "id2"], [7, "id3"], [7, "id5"], [7, "id9"], [7, "id11"], [7, "id13"], [7, "id15"], [9, "parameters"], [9, "id1"], [9, "id2"], [9, "id4"], [9, "id8"], [9, "id10"], [9, "id12"], [9, "id14"], [9, "id18"], [9, "id20"], [9, "id22"], [9, "id24"], [9, "id26"], [9, "id30"], [9, "id32"], [9, "id34"], [9, "id36"], [11, "parameters"], [11, "id1"], [11, "id2"], [11, "id4"], [13, "parameters"], [13, "id1"], [13, "id3"], [13, "id5"], [13, "id7"], [13, "id9"], [13, "id12"], [13, "id15"], [13, "id17"], [13, "id19"], [13, "id21"], [13, "id25"], [13, "id28"], [13, "id30"], [13, "id32"], [13, "id34"], [13, "id38"], [13, "id41"], [13, "id43"], [13, "id45"], [13, "id47"], [13, "id51"], [13, "id54"], [13, "id56"], [13, "id58"], [13, "id60"], [13, "id62"], [13, "id64"], [13, "id68"], [13, "id70"], [13, "id72"], [13, "id74"], [13, "id77"], [13, "id80"], [13, "id83"], [13, "id85"], [13, "id87"], [14, "parameters"], [14, "id2"], [14, "id3"], [14, "id5"]], "Raises": [[5, "raises"], [5, "id26"], [6, "raises"], [6, "id5"]], "References": [[5, "references"], [5, "id4"], [5, "id9"], [5, "id20"], [5, "id31"], [7, "references"], [7, "id6"], [9, "references"], [9, "id16"], [9, "id28"], [11, "references"], [13, "references"], [13, "id23"], [13, "id36"], [13, "id66"]], "Returns": [[4, "returns"], [4, "id2"], [4, "id4"], [4, "id6"], [4, "id8"], [4, "id10"], [4, "id13"], [4, "id15"], [4, "id17"], [5, "returns"], [5, "id7"], [5, "id12"], [5, "id14"], [5, "id16"], [5, "id18"], [5, "id23"], [5, "id25"], [5, "id28"], [5, "id34"], [5, "id36"], [5, "id38"], [5, "id40"], [6, "returns"], [6, "id2"], [6, "id4"], [6, "id7"], [6, "id10"], [7, "returns"], [7, "id4"], [7, "id10"], [7, "id12"], [7, "id16"], [9, "returns"], [9, "id3"], [9, "id9"], [9, "id11"], [9, "id13"], [9, "id19"], [9, "id21"], [9, "id23"], [9, "id25"], [9, "id31"], [9, "id33"], [9, "id35"], [9, "id37"], [11, "returns"], [11, "id3"], [13, "returns"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id13"], [13, "id16"], [13, "id18"], [13, "id20"], [13, "id26"], [13, "id29"], [13, "id31"], [13, "id33"], [13, "id39"], [13, "id42"], [13, "id44"], [13, "id46"], [13, "id52"], [13, "id55"], [13, "id57"], [13, "id59"], [13, "id61"], [13, "id63"], [13, "id69"], [13, "id71"], [13, "id73"], [13, "id78"], [13, "id81"], [13, "id84"], [13, "id86"], [13, "id88"], [14, "returns"], [14, "id4"], [14, "id6"]], "Submodules": [[4, "submodules"]], "Subpackages": [[4, "subpackages"]], "Welcome to scikit-multilearn-ng\u2019s documentation!": [[0, null]], "skmultilearn": [[3, null]], "skmultilearn package": [[4, null]], "skmultilearn.adapt package": [[5, null]], "skmultilearn.base package": [[6, null]], "skmultilearn.cluster package": [[7, null]], "skmultilearn.dataset module": [[4, "module-skmultilearn.dataset"]], "skmultilearn.embedding package": [[8, null]], "skmultilearn.ensemble package": [[9, null]], "skmultilearn.ext package": [[10, null]], "skmultilearn.missing package": [[11, null]], "skmultilearn.model_selection package": [[12, null]], "skmultilearn.problem_transform package": [[13, null]], "skmultilearn.tree package": [[14, null]], "skmultilearn.utils module": [[4, "module-skmultilearn.utils"]]}, "docnames": ["index", "source/benchmark", "source/license", "source/modules", "source/skmultilearn", "source/skmultilearn.adapt", "source/skmultilearn.base", "source/skmultilearn.cluster", "source/skmultilearn.embedding", "source/skmultilearn.ensemble", "source/skmultilearn.ext", "source/skmultilearn.missing", "source/skmultilearn.model_selection", "source/skmultilearn.problem_transform", "source/skmultilearn.tree"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "source/benchmark.rst", "source/license.rst", "source/modules.rst", "source/skmultilearn.rst", "source/skmultilearn.adapt.rst", "source/skmultilearn.base.rst", "source/skmultilearn.cluster.rst", "source/skmultilearn.embedding.rst", "source/skmultilearn.ensemble.rst", "source/skmultilearn.ext.rst", "source/skmultilearn.missing.rst", "source/skmultilearn.model_selection.rst", "source/skmultilearn.problem_transform.rst", "source/skmultilearn.tree.rst"], "indexentries": {"available_data_sets() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.available_data_sets", false]], "binaryrelevance (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.BinaryRelevance", false]], "brknnaclassifier (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.BRkNNaClassifier", false]], "brknnbclassifier (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.BRkNNbClassifier", false]], "calculate_gain() (skmultilearn.tree.correlationcriterion method)": [[14, "skmultilearn.tree.CorrelationCriterion.calculate_gain", false]], "calculate_gain() (skmultilearn.tree.entropycriterion method)": [[14, "skmultilearn.tree.EntropyCriterion.calculate_gain", false]], "calculate_gain() (skmultilearn.tree.ginicriterion method)": [[14, "skmultilearn.tree.GiniCriterion.calculate_gain", false]], "calculate_impurity() (skmultilearn.tree.correlationcriterion method)": [[14, "skmultilearn.tree.CorrelationCriterion.calculate_impurity", false]], "calculate_impurity() (skmultilearn.tree.entropycriterion method)": [[14, "skmultilearn.tree.EntropyCriterion.calculate_impurity", false]], "calculate_impurity() (skmultilearn.tree.ginicriterion method)": [[14, "skmultilearn.tree.GiniCriterion.calculate_impurity", false]], "classificationheterogeneousfeature (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature", false]], "classifierchain (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.ClassifierChain", false]], "clear_data_home() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.clear_data_home", false]], "correlationcriterion (class in skmultilearn.tree)": [[14, "skmultilearn.tree.CorrelationCriterion", false]], "download_dataset() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.download_dataset", false]], "entropycriterion (class in skmultilearn.tree)": [[14, "skmultilearn.tree.EntropyCriterion", false]], "find_optm_classifiers() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.find_optm_classifiers", false]], "fit() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.fit", false]], "fit() (skmultilearn.adapt.mlknn method)": [[5, "skmultilearn.adapt.MLkNN.fit", false]], "fit() (skmultilearn.adapt.mltsvm method)": [[5, "skmultilearn.adapt.MLTSVM.fit", false]], "fit() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.fit", false]], "fit() (skmultilearn.ensemble.rakeld method)": [[9, "skmultilearn.ensemble.RakelD.fit", false]], "fit() (skmultilearn.ensemble.rakelo method)": [[9, "skmultilearn.ensemble.RakelO.fit", false]], "fit() (skmultilearn.missing.smile method)": [[11, "skmultilearn.missing.SMiLE.fit", false]], "fit() (skmultilearn.problem_transform.binaryrelevance method)": [[13, "skmultilearn.problem_transform.BinaryRelevance.fit", false]], "fit() (skmultilearn.problem_transform.classificationheterogeneousfeature method)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature.fit", false]], "fit() (skmultilearn.problem_transform.classifierchain method)": [[13, "skmultilearn.problem_transform.ClassifierChain.fit", false]], "fit() (skmultilearn.problem_transform.instancebasedlogisticregression method)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression.fit", false]], "fit() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.fit", false]], "fit() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.fit", false]], "fit() (skmultilearn.tree.predictiveclusteringtree method)": [[14, "skmultilearn.tree.PredictiveClusteringTree.fit", false]], "fit_predict() (skmultilearn.cluster.fixedlabelspaceclusterer method)": [[7, "skmultilearn.cluster.FixedLabelSpaceClusterer.fit_predict", false]], "fit_predict() (skmultilearn.cluster.igraphlabelgraphclusterer method)": [[7, "skmultilearn.cluster.IGraphLabelGraphClusterer.fit_predict", false]], "fit_predict() (skmultilearn.cluster.matrixlabelspaceclusterer method)": [[7, "skmultilearn.cluster.MatrixLabelSpaceClusterer.fit_predict", false]], "fit_predict() (skmultilearn.cluster.randomlabelspaceclusterer method)": [[7, "skmultilearn.cluster.RandomLabelSpaceClusterer.fit_predict", false]], "fixedlabelspaceclusterer (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.FixedLabelSpaceClusterer", false]], "get_data_home() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.get_data_home", false]], "get_matrix_in_format() (in module skmultilearn.utils)": [[4, "skmultilearn.utils.get_matrix_in_format", false]], "get_params() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.get_params", false]], "getparams() (skmultilearn.missing.smile method)": [[11, "skmultilearn.missing.SMiLE.getParams", false]], "ginicriterion (class in skmultilearn.tree)": [[14, "skmultilearn.tree.GiniCriterion", false]], "igraphlabelgraphclusterer (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.IGraphLabelGraphClusterer", false]], "instancebasedlogisticregression (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression", false]], "inverse_transform() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.inverse_transform", false]], "labelcooccurrencegraphbuilder (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.LabelCooccurrenceGraphBuilder", false]], "labelpowerset (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.LabelPowerset", false]], "labelspacepartitioningclassifier (class in skmultilearn.ensemble)": [[9, "skmultilearn.ensemble.LabelSpacePartitioningClassifier", false]], "load_dataset() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.load_dataset", false]], "load_dataset_dump() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.load_dataset_dump", false]], "load_from_arff() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.load_from_arff", false]], "majorityvotingclassifier (class in skmultilearn.ensemble)": [[9, "skmultilearn.ensemble.MajorityVotingClassifier", false]], "matrix_creation_function_for_format() (in module skmultilearn.utils)": [[4, "skmultilearn.utils.matrix_creation_function_for_format", false]], "matrixlabelspaceclusterer (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.MatrixLabelSpaceClusterer", false]], "measure_per_label() (in module skmultilearn.utils)": [[4, "skmultilearn.utils.measure_per_label", false]], "mlaram (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.MLARAM", false]], "mlclassifierbase (class in skmultilearn.base)": [[6, "skmultilearn.base.MLClassifierBase", false]], "mlknn (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.MLkNN", false]], "mltsvm (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.MLTSVM", false]], "module": [[4, "module-skmultilearn", false], [4, "module-skmultilearn.dataset", false], [4, "module-skmultilearn.utils", false], [5, "module-skmultilearn.adapt", false], [6, "module-skmultilearn.base", false], [7, "module-skmultilearn.cluster", false], [9, "module-skmultilearn.ensemble", false], [11, "module-skmultilearn.missing", false], [12, "module-skmultilearn.model_selection", false], [13, "module-skmultilearn.problem_transform", false], [14, "module-skmultilearn.tree", false]], "predict() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.predict", false]], "predict() (skmultilearn.adapt.mlknn method)": [[5, "skmultilearn.adapt.MLkNN.predict", false]], "predict() (skmultilearn.adapt.mltsvm method)": [[5, "skmultilearn.adapt.MLTSVM.predict", false]], "predict() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.predict", false]], "predict() (skmultilearn.ensemble.labelspacepartitioningclassifier method)": [[9, "skmultilearn.ensemble.LabelSpacePartitioningClassifier.predict", false]], "predict() (skmultilearn.ensemble.majorityvotingclassifier method)": [[9, "skmultilearn.ensemble.MajorityVotingClassifier.predict", false]], "predict() (skmultilearn.ensemble.rakeld method)": [[9, "skmultilearn.ensemble.RakelD.predict", false]], "predict() (skmultilearn.ensemble.rakelo method)": [[9, "skmultilearn.ensemble.RakelO.predict", false]], "predict() (skmultilearn.missing.smile method)": [[11, "skmultilearn.missing.SMiLE.predict", false]], "predict() (skmultilearn.problem_transform.binaryrelevance method)": [[13, "skmultilearn.problem_transform.BinaryRelevance.predict", false]], "predict() (skmultilearn.problem_transform.classificationheterogeneousfeature method)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature.predict", false]], "predict() (skmultilearn.problem_transform.classifierchain method)": [[13, "skmultilearn.problem_transform.ClassifierChain.predict", false]], "predict() (skmultilearn.problem_transform.instancebasedlogisticregression method)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression.predict", false]], "predict() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.predict", false]], "predict() (skmultilearn.problem_transform.probabilisticclassifierchain method)": [[13, "skmultilearn.problem_transform.ProbabilisticClassifierChain.predict", false]], "predict() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.predict", false]], "predict() (skmultilearn.tree.predictiveclusteringtree method)": [[14, "skmultilearn.tree.PredictiveClusteringTree.predict", false]], "predict_proba() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.predict_proba", false]], "predict_proba() (skmultilearn.adapt.mlknn method)": [[5, "skmultilearn.adapt.MLkNN.predict_proba", false]], "predict_proba() (skmultilearn.ensemble.majorityvotingclassifier method)": [[9, "skmultilearn.ensemble.MajorityVotingClassifier.predict_proba", false]], "predict_proba() (skmultilearn.ensemble.rakeld method)": [[9, "skmultilearn.ensemble.RakelD.predict_proba", false]], "predict_proba() (skmultilearn.ensemble.rakelo method)": [[9, "skmultilearn.ensemble.RakelO.predict_proba", false]], "predict_proba() (skmultilearn.problem_transform.binaryrelevance method)": [[13, "skmultilearn.problem_transform.BinaryRelevance.predict_proba", false]], "predict_proba() (skmultilearn.problem_transform.classificationheterogeneousfeature method)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature.predict_proba", false]], "predict_proba() (skmultilearn.problem_transform.classifierchain method)": [[13, "skmultilearn.problem_transform.ClassifierChain.predict_proba", false]], "predict_proba() (skmultilearn.problem_transform.instancebasedlogisticregression method)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression.predict_proba", false]], "predict_proba() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.predict_proba", false]], "predict_proba() (skmultilearn.problem_transform.probabilisticclassifierchain method)": [[13, "skmultilearn.problem_transform.ProbabilisticClassifierChain.predict_proba", false]], "predict_proba() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.predict_proba", false]], "predictiveclusteringtree (class in skmultilearn.tree)": [[14, "skmultilearn.tree.PredictiveClusteringTree", false]], "predictiveclusteringtree.node (class in skmultilearn.tree)": [[14, "skmultilearn.tree.PredictiveClusteringTree.Node", false]], "probabilisticclassifierchain (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.ProbabilisticClassifierChain", false]], "problemtransformationbase (class in skmultilearn.base)": [[6, "skmultilearn.base.ProblemTransformationBase", false]], "rakeld (class in skmultilearn.ensemble)": [[9, "skmultilearn.ensemble.RakelD", false]], "rakelo (class in skmultilearn.ensemble)": [[9, "skmultilearn.ensemble.RakelO", false]], "randomlabelspaceclusterer (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.RandomLabelSpaceClusterer", false]], "reset() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.reset", false]], "save_dataset_dump() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.save_dataset_dump", false]], "save_to_arff() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.save_to_arff", false]], "set_params() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.set_params", false]], "set_score_request() (skmultilearn.adapt.brknnaclassifier method)": [[5, "skmultilearn.adapt.BRkNNaClassifier.set_score_request", false]], "set_score_request() (skmultilearn.adapt.brknnbclassifier method)": [[5, "skmultilearn.adapt.BRkNNbClassifier.set_score_request", false]], "set_score_request() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.set_score_request", false]], "set_score_request() (skmultilearn.adapt.mlknn method)": [[5, "skmultilearn.adapt.MLkNN.set_score_request", false]], "set_score_request() (skmultilearn.adapt.mltsvm method)": [[5, "skmultilearn.adapt.MLTSVM.set_score_request", false]], "set_score_request() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.set_score_request", false]], "set_score_request() (skmultilearn.base.problemtransformationbase method)": [[6, "skmultilearn.base.ProblemTransformationBase.set_score_request", false]], "set_score_request() (skmultilearn.ensemble.labelspacepartitioningclassifier method)": [[9, "skmultilearn.ensemble.LabelSpacePartitioningClassifier.set_score_request", false]], "set_score_request() (skmultilearn.ensemble.majorityvotingclassifier method)": [[9, "skmultilearn.ensemble.MajorityVotingClassifier.set_score_request", false]], "set_score_request() (skmultilearn.ensemble.rakeld method)": [[9, "skmultilearn.ensemble.RakelD.set_score_request", false]], "set_score_request() (skmultilearn.ensemble.rakelo method)": [[9, "skmultilearn.ensemble.RakelO.set_score_request", false]], "set_score_request() (skmultilearn.problem_transform.binaryrelevance method)": [[13, "skmultilearn.problem_transform.BinaryRelevance.set_score_request", false]], "set_score_request() (skmultilearn.problem_transform.classificationheterogeneousfeature method)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature.set_score_request", false]], "set_score_request() (skmultilearn.problem_transform.classifierchain method)": [[13, "skmultilearn.problem_transform.ClassifierChain.set_score_request", false]], "set_score_request() (skmultilearn.problem_transform.instancebasedlogisticregression method)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression.set_score_request", false]], "set_score_request() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.set_score_request", false]], "set_score_request() (skmultilearn.problem_transform.probabilisticclassifierchain method)": [[13, "skmultilearn.problem_transform.ProbabilisticClassifierChain.set_score_request", false]], "set_score_request() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.set_score_request", false]], "set_score_request() (skmultilearn.tree.predictiveclusteringtree method)": [[14, "skmultilearn.tree.PredictiveClusteringTree.set_score_request", false]], "setparams() (skmultilearn.missing.smile method)": [[11, "skmultilearn.missing.SMiLE.setParams", false]], "skmultilearn": [[4, "module-skmultilearn", false]], "skmultilearn.adapt": [[5, "module-skmultilearn.adapt", false]], "skmultilearn.base": [[6, "module-skmultilearn.base", false]], "skmultilearn.cluster": [[7, "module-skmultilearn.cluster", false]], "skmultilearn.dataset": [[4, "module-skmultilearn.dataset", false]], "skmultilearn.ensemble": [[9, "module-skmultilearn.ensemble", false]], "skmultilearn.missing": [[11, "module-skmultilearn.missing", false]], "skmultilearn.model_selection": [[12, "module-skmultilearn.model_selection", false]], "skmultilearn.problem_transform": [[13, "module-skmultilearn.problem_transform", false]], "skmultilearn.tree": [[14, "module-skmultilearn.tree", false]], "skmultilearn.utils": [[4, "module-skmultilearn.utils", false]], "smile (class in skmultilearn.missing)": [[11, "skmultilearn.missing.SMiLE", false]], "structuredgridsearchcv (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV", false]], "transform() (skmultilearn.cluster.labelcooccurrencegraphbuilder method)": [[7, "skmultilearn.cluster.LabelCooccurrenceGraphBuilder.transform", false]], "transform() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.transform", false]]}, "objects": {"": [[4, 0, 0, "-", "skmultilearn"]], "skmultilearn": [[5, 0, 0, "-", "adapt"], [6, 0, 0, "-", "base"], [7, 0, 0, "-", "cluster"], [4, 0, 0, "-", "dataset"], [9, 0, 0, "-", "ensemble"], [11, 0, 0, "-", "missing"], [12, 0, 0, "-", "model_selection"], [13, 0, 0, "-", "problem_transform"], [14, 0, 0, "-", "tree"], [4, 0, 0, "-", "utils"]], "skmultilearn.adapt": [[5, 1, 1, "", "BRkNNaClassifier"], [5, 1, 1, "", "BRkNNbClassifier"], [5, 1, 1, "", "MLARAM"], [5, 1, 1, "", "MLTSVM"], [5, 1, 1, "", "MLkNN"]], "skmultilearn.adapt.BRkNNaClassifier": [[5, 2, 1, "", "set_score_request"]], "skmultilearn.adapt.BRkNNbClassifier": [[5, 2, 1, "", "set_score_request"]], "skmultilearn.adapt.MLARAM": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "predict_proba"], [5, 2, 1, "", "reset"], [5, 2, 1, "", "set_score_request"]], "skmultilearn.adapt.MLTSVM": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "set_score_request"]], "skmultilearn.adapt.MLkNN": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "predict_proba"], [5, 2, 1, "", "set_score_request"]], "skmultilearn.base": [[6, 1, 1, "", "MLClassifierBase"], [6, 1, 1, "", "ProblemTransformationBase"]], "skmultilearn.base.MLClassifierBase": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "set_params"], [6, 2, 1, "", "set_score_request"]], "skmultilearn.base.ProblemTransformationBase": [[6, 2, 1, "", "set_score_request"]], "skmultilearn.cluster": [[7, 1, 1, "", "FixedLabelSpaceClusterer"], [7, 1, 1, "", "IGraphLabelGraphClusterer"], [7, 1, 1, "", "LabelCooccurrenceGraphBuilder"], [7, 1, 1, "", "MatrixLabelSpaceClusterer"], [7, 1, 1, "", "RandomLabelSpaceClusterer"]], "skmultilearn.cluster.FixedLabelSpaceClusterer": [[7, 2, 1, "", "fit_predict"]], "skmultilearn.cluster.IGraphLabelGraphClusterer": [[7, 2, 1, "", "fit_predict"]], "skmultilearn.cluster.LabelCooccurrenceGraphBuilder": [[7, 2, 1, "", "transform"]], "skmultilearn.cluster.MatrixLabelSpaceClusterer": [[7, 2, 1, "", "fit_predict"]], "skmultilearn.cluster.RandomLabelSpaceClusterer": [[7, 2, 1, "", "fit_predict"]], "skmultilearn.dataset": [[4, 3, 1, "", "available_data_sets"], [4, 3, 1, "", "clear_data_home"], [4, 3, 1, "", "download_dataset"], [4, 3, 1, "", "get_data_home"], [4, 3, 1, "", "load_dataset"], [4, 3, 1, "", "load_dataset_dump"], [4, 3, 1, "", "load_from_arff"], [4, 3, 1, "", "save_dataset_dump"], [4, 3, 1, "", "save_to_arff"]], "skmultilearn.ensemble": [[9, 1, 1, "", "LabelSpacePartitioningClassifier"], [9, 1, 1, "", "MajorityVotingClassifier"], [9, 1, 1, "", "RakelD"], [9, 1, 1, "", "RakelO"]], "skmultilearn.ensemble.LabelSpacePartitioningClassifier": [[9, 2, 1, "", "predict"], [9, 2, 1, "", "set_score_request"]], "skmultilearn.ensemble.MajorityVotingClassifier": [[9, 2, 1, "", "predict"], [9, 2, 1, "", "predict_proba"], [9, 2, 1, "", "set_score_request"]], "skmultilearn.ensemble.RakelD": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "predict_proba"], [9, 2, 1, "", "set_score_request"]], "skmultilearn.ensemble.RakelO": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "predict_proba"], [9, 2, 1, "", "set_score_request"]], "skmultilearn.missing": [[11, 1, 1, "", "SMiLE"]], "skmultilearn.missing.SMiLE": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "getParams"], [11, 2, 1, "", "predict"], [11, 2, 1, "", "setParams"]], "skmultilearn.problem_transform": [[13, 1, 1, "", "BinaryRelevance"], [13, 1, 1, "", "ClassificationHeterogeneousFeature"], [13, 1, 1, "", "ClassifierChain"], [13, 1, 1, "", "InstanceBasedLogisticRegression"], [13, 1, 1, "", "LabelPowerset"], [13, 1, 1, "", "ProbabilisticClassifierChain"], [13, 1, 1, "", "StructuredGridSearchCV"]], "skmultilearn.problem_transform.BinaryRelevance": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.problem_transform.ClassificationHeterogeneousFeature": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.problem_transform.ClassifierChain": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.problem_transform.InstanceBasedLogisticRegression": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.problem_transform.LabelPowerset": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "inverse_transform"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"], [13, 2, 1, "", "transform"]], "skmultilearn.problem_transform.ProbabilisticClassifierChain": [[13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.problem_transform.StructuredGridSearchCV": [[13, 2, 1, "", "find_optm_classifiers"], [13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.tree": [[14, 1, 1, "", "CorrelationCriterion"], [14, 1, 1, "", "EntropyCriterion"], [14, 1, 1, "", "GiniCriterion"], [14, 1, 1, "", "PredictiveClusteringTree"]], "skmultilearn.tree.CorrelationCriterion": [[14, 2, 1, "", "calculate_gain"], [14, 2, 1, "", "calculate_impurity"]], "skmultilearn.tree.EntropyCriterion": [[14, 2, 1, "", "calculate_gain"], [14, 2, 1, "", "calculate_impurity"]], "skmultilearn.tree.GiniCriterion": [[14, 2, 1, "", "calculate_gain"], [14, 2, 1, "", "calculate_impurity"]], "skmultilearn.tree.PredictiveClusteringTree": [[14, 1, 1, "", "Node"], [14, 2, 1, "", "fit"], [14, 2, 1, "", "predict"], [14, 2, 1, "", "set_score_request"]], "skmultilearn.utils": [[4, 3, 1, "", "get_matrix_in_format"], [4, 3, 1, "", "matrix_creation_function_for_format"], [4, 3, 1, "", "measure_per_label"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [1, 4, 5, 6, 7, 9, 11, 13, 14], "0": [1, 4, 5, 6, 7, 9, 11, 13, 14], "001": 13, "01460": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "02": 5, "03125": 5, "033": 11, "04": 11, "05": 5, "06": 5, "0925": 11, "1": [4, 5, 6, 7, 9, 11, 13, 14], "10": [1, 5, 7, 9, 11, 13], "100": [1, 7, 13, 14], "1000": 7, "1016": 11, "1030": 7, "1041": 9, "1079": 9, "1089": 9, "1099": [7, 9], "1109": [5, 9], "14": 5, "16": 13, "164": 9, "1695": 7, "17": 13, "1702": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "18": [7, 9, 13], "192": 11, "1e": 5, "1t": 11, "2": [2, 5, 7, 9, 13, 14], "20": [13, 14], "200": 13, "2004": 13, "2006": 7, "2007": 5, "2008": 5, "2009": 13, "2010": [9, 13], "2011": 9, "2015": 5, "2016": [5, 7, 9], "2017": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "2017arxiv170201460": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "202": 11, "2038": 5, "2048": 5, "21": 13, "211": 13, "22": 13, "225": 13, "23": 9, "2312": 11, "2375": 5, "254": 13, "260": 11, "269": 13, "282": [7, 9], "2m": 9, "3": [5, 6, 7, 9, 13, 14], "30": 13, "3390": [7, 9], "347518217573": 5, "35": 11, "4": [7, 9, 11, 14], "40": 5, "42": 14, "4300": [7, 9], "4347": 9, "5": [4, 5, 7, 9, 11, 14], "50": 13, "500": 5, "52": 5, "5567103": 9, "5th": [4, 5], "6": [5, 9, 11], "61": 5, "6418797": 13, "7": [5, 9, 13], "7395756": 5, "74": 5, "76": 13, "78988303374297597": 5, "8": [5, 7, 9, 11], "847": 5, "854": 5, "9": 5, "9259": 5, "95": 5, "999": 5, "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "As": [1, 11, 13], "By": 4, "For": [0, 7, 13], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "In": [1, 5, 13], "It": [0, 5, 6, 11, 13, 14], "The": [1, 4, 5, 6, 7, 9, 11, 12, 13, 14], "There": 13, "To": [0, 1, 13], "Will": 9, "_binaryrelevanceknn": 5, "_generate_partit": [9, 13], "_label_count": 9, "abil": [5, 14], "about": 7, "abov": [4, 5], "abstract": [5, 6, 14], "access": [0, 6, 9], "accommod": 14, "accompani": 2, "accord": [9, 13], "account": 5, "accuraci": [1, 13], "activ": 5, "ad": [0, 5, 6, 9, 13, 14], "adapt": [1, 3, 4, 11, 13], "addit": 7, "adjac": 7, "advanc": 9, "agre": 9, "aim": [5, 14], "akin": 0, "algorithm": [0, 1, 5, 11, 13, 14], "alia": [5, 6, 9, 13, 14], "align": 7, "all": [0, 1, 2, 4, 5, 6, 7, 9, 13], "allow": [5, 6, 7, 9, 13, 14], "allow_overlap": 7, "alongsid": 13, "alpha": [11, 13], "alreadi": 4, "also": [1, 5, 6, 7], "altern": 4, "amount": 1, "an": [4, 5, 6, 7, 9, 11, 13, 14], "ani": 2, "anoth": 13, "apart": 1, "api": [0, 6, 7, 13], "append": [4, 6, 7], "approach": [5, 6, 7, 9, 13, 14], "ar": [0, 1, 2, 5, 6, 7, 9, 11, 13, 14], "aram": 5, "archiveprefix": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "area": 1, "arff": [1, 4], "arrai": [4, 5, 6, 7, 11, 14], "array_lik": [4, 9, 13], "arrrai": 7, "art": 5, "articl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "article_numb": [7, 9], "artifici": 5, "arxiv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "asia": 13, "assign": [1, 4, 5, 6, 7, 9, 13, 14], "associ": 14, "assum": [5, 7, 13], "assumpt": 11, "attribut": 4, "augment": [6, 13], "author": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "auto": 13, "automag": 6, "automat": [4, 7, 9], "avail": [0, 4, 5, 9, 11, 12, 14], "available_data_set": [3, 4], "averag": 5, "avoid": 4, "b": 11, "balanc": 11, "base": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "base_classifi": [7, 9], "base_classifier_require_dens": 9, "base_impur": 14, "baseestim": [6, 9, 13, 14], "basic": [4, 13], "bay": 13, "bayesian": [5, 13], "been": [1, 7], "begin": 4, "being": 9, "below": 13, "benefit": 0, "benit": 5, "bernhard": 13, "best": [1, 9, 13], "best_params_": [5, 13], "best_score_": [5, 13], "better": [1, 7, 9, 14], "between": [1, 5, 6, 7, 11, 13, 14], "bia": 11, "binari": [1, 2, 4, 5, 6, 7, 9, 13, 14], "binaryrelev": [0, 3, 4, 6, 9, 13], "blob": 13, "block": 7, "blockmodel": [2, 7], "booktitl": [5, 13], "bool": [4, 5, 6, 7, 9, 13, 14], "boolean": [4, 6], "bootstrap": 13, "both": [7, 13], "br": 13, "break": 4, "brknnaclassifi": [3, 4, 5], "brknnbclassifi": [3, 4, 5], "bsd": [2, 4], "bug": 0, "build": [0, 5, 7, 9, 14], "builder": 7, "built": 4, "bz2": 4, "c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "c_k": 5, "cach": 4, "cache_s": 13, "calcul": [1, 14], "calculate_gain": [4, 14], "calculate_impur": [4, 14], "call": 13, "callabl": 4, "can": [0, 2, 4, 5, 6, 7, 9, 13, 14], "cannot": 13, "capabl": 0, "captur": [13, 14], "case": [0, 1, 5, 7, 11, 13], "categor": 4, "cc": 13, "cd": 0, "chain": [7, 9, 13], "chang": [5, 6, 9, 13, 14], "characterist": 14, "chart": 1, "check": 1, "chen": 5, "chen2016mltsvm": 5, "cheng": 13, "cheng2009combin": 13, "child": 14, "choic": [7, 9], "choos": 14, "chosen": 14, "christiansch": 13, "chun": 5, "cite": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "class": [0, 5, 6, 7, 9, 11, 13, 14], "class_prior": 13, "class_weight": 13, "classif": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "classifi": [0, 1, 4, 5, 6, 7, 9, 11, 13, 14], "classificationheterogeneousfeatur": [3, 4, 6, 13], "classifier_": 9, "classifier__alpha": 13, "classifier__criterion": 13, "classifier__kernel": 13, "classifier__n_estim": 13, "classifier_num": 13, "classifierchain": [3, 4, 6, 7, 9, 13], "classifiermixin": [6, 14], "classifiers_": 13, "claus": 2, "clear_data_hom": [3, 4], "clf": [5, 13], "clonabl": 7, "clone": [0, 6], "closer": 1, "clr": 7, "cluster": [2, 3, 4, 5, 9, 11, 14], "cluster_count": 7, "cluster_s": 7, "clustermixin": 7, "co": 7, "code": [5, 7], "codebas": 2, "coef0": 13, "color": 7, "column": [4, 13], "com": [0, 7, 9, 11, 13], "combin": [6, 13], "come": 13, "command": 1, "commerci": 2, "common": [6, 7], "commun": [2, 7], "communitii": 7, "compar": 5, "comparison": 1, "compat": [4, 6, 7, 9, 13], "complet": 1, "complex": [0, 7, 14], "compos": 13, "compress": [4, 5, 7], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "concentr": 5, "concern": 7, "condit": 13, "confer": [5, 13], "confid": 5, "confidences_": 5, "connect": 7, "consid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "consider": [1, 7], "construct": [7, 9, 13, 14], "constructor": 13, "contain": [4, 7, 9], "content": 4, "context": 5, "control": 5, "convert": [4, 7, 13], "copi": [2, 6], "copyable_attr": 6, "copyleft": 2, "core": 1, "corpusid": 13, "correct": 5, "correl": [11, 13, 14], "correlationcriterion": [3, 4, 14], "correspond": 13, "cost": 5, "cpu": 1, "creat": [4, 11, 13, 14], "creation": 5, "criteria": 14, "criterion": [13, 14], "cross": [6, 13], "csardi": 7, "csc_matrix": [5, 6, 9], "currenlti": 14, "current": [5, 6, 7, 9, 11, 12], "curv": 1, "custom": [4, 14], "cv": 13, "cyclic": [6, 13], "data": [1, 4, 5, 6, 7, 9, 11, 13, 14], "data_hom": 4, "data_set": 4, "databas": 13, "datadriven": [7, 9], "dataset": [3, 5, 13, 14], "deal": 11, "decid": [1, 7], "decis": [5, 14], "decision_function_shap": 13, "decisiontreeclassifi": 14, "deep": 6, "default": [2, 4, 5, 6, 7, 9, 11, 13, 14], "defin": [7, 13], "definit": 4, "degre": 13, "delet": 4, "dembczynski": 13, "dembczynski2010bayesom": 13, "demonstr": 0, "deng": 5, "denot": 13, "dens": [5, 6, 7, 9, 13, 14], "depend": [4, 5, 6, 13, 14], "depth": 14, "deriv": [6, 13], "describ": 7, "descript": [5, 7, 9, 11, 12, 13, 14], "desir": [4, 7, 9], "detect": [2, 7], "determin": [5, 14], "develop": 0, "diagon": 11, "diagonal_lambda": 11, "dict": [4, 6, 7, 13], "dictionari": [4, 6, 7], "did": [1, 7], "differ": [1, 14], "dir": 4, "directori": 4, "discoveri": 13, "discrimin": 13, "disk": 4, "distinct": 9, "distribut": [2, 13], "divid": [7, 9], "divis": [2, 7, 9], "doc": 4, "document": 13, "doe": [4, 5], "doi": [5, 7, 9, 11], "don": 5, "done": 13, "download": 4, "download_dataset": [3, 4], "draw": 7, "driven": [7, 9], "dtype": 7, "dump": 4, "dure": 11, "dxc": 11, "e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "e18080282": [7, 9], "each": [1, 4, 5, 6, 7, 9, 13, 14], "ecosystem": 4, "edg": [1, 7], "effect": [1, 5, 6, 9, 13, 14], "effici": 0, "eib": 13, "eigenvector": 7, "either": [7, 13], "eleftherio": 5, "eleftheriosspyromitros2008": 5, "element": 11, "elsevi": 5, "embed": [3, 4], "empir": 5, "emploi": [2, 7], "enabl": [4, 14], "enable_metadata_rout": [5, 6, 9, 13, 14], "encode_nomin": 4, "end": 4, "engin": 9, "ensembl": [3, 4, 6, 7, 13], "ensur": [11, 14], "entropi": [7, 9, 13, 14], "entropycriterion": [3, 4, 14], "environ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "eprint": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "equal": [7, 9, 13], "equat": 11, "error": [1, 5, 6, 9, 13, 14], "error_scor": 13, "especi": 6, "estim": [5, 6, 9, 11, 12, 13, 14], "estimate_matrix": 11, "etc": 13, "european": 13, "evalu": 14, "even": 7, "everi": 1, "ex": 7, "exampl": 0, "execut": 7, "exist": [4, 5, 6, 9, 13, 14], "expand": 4, "expect": 7, "expert": 7, "explicit": 4, "explor": [7, 9], "ext": [3, 4], "extend": [13, 14], "extens": [4, 13], "extra": [5, 6, 13], "eyk": 13, "f": 5, "f1": 5, "f1_macro": 5, "factor": 4, "fals": [0, 4, 5, 6, 7, 9, 13, 14], "familiar": 0, "fast": [1, 7], "faster": 1, "fastgreedi": 7, "featur": [4, 5, 6, 9, 13, 14], "feature_index": 14, "feature_nam": 4, "feb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "few": 14, "figur": 1, "file": 4, "file_nam": 4, "filenam": 4, "fill": 13, "find": [1, 5, 7, 13, 14], "find_optm_classifi": [4, 13], "fine": 13, "first": [5, 13], "first_layer_": 13, "fit": [0, 4, 5, 6, 7, 9, 11, 13, 14], "fit_predict": [4, 7], "fit_prior": 13, "fix": [0, 5, 7], "fixedlabelspacecluster": [3, 4, 7, 9], "flexibl": 14, "float": [4, 5, 7, 9, 11, 13, 14], "flow": 7, "folder": 4, "follow": [0, 1, 2, 5, 6, 7, 9, 11, 13], "forc": 1, "forest": [1, 7], "form": 2, "format": [4, 7, 13], "found": [9, 13], "four": 9, "fraction": 5, "frank": 13, "from": [0, 1, 4, 5, 6, 7, 9, 11, 13, 14], "full": 7, "function": [2, 4, 5, 6, 7, 13], "futur": [6, 9], "g": [5, 6, 9, 13, 14], "gabor": 7, "gain": 14, "gamma": 13, "gather": 7, "gaussiannb": [7, 9], "gener": [4, 6, 7], "geoff": 13, "get": [6, 7], "get_data_hom": [3, 4], "get_matrix_in_format": [3, 4], "get_param": [4, 6], "getparam": [4, 11], "gini": [13, 14], "ginicriterion": [3, 4, 14], "git": 0, "github": [0, 13], "give": 4, "given": [4, 5, 6, 7, 9, 13, 14], "go": 13, "godbol": 13, "godbole2004discrimin": 13, "gpl": [0, 7], "granular": 14, "graph": [7, 11], "graph_": 7, "graph_build": 7, "graphbuilderbas": 7, "graphtool": [0, 2], "graphtoollabelgraphcluster": 7, "greec": 5, "greedi": 7, "grid": [6, 13], "gridsearchcv": [5, 13], "grigorio": 5, "ground": 4, "guid": [5, 6, 7, 9, 13, 14], "guoxian": 11, "h": [11, 13], "ha": [4, 5, 6, 7, 9, 13, 14], "had": 1, "hai": 5, "half": [5, 9], "ham": 1, "handl": [4, 6, 7, 14], "haram": 5, "have": [1, 11, 14], "hc": 11, "heavili": 14, "hellen": 5, "help": 14, "here": [0, 5, 9], "heterogen": 13, "hierarch": 5, "highest": [1, 13], "hold": 6, "holm": 13, "home": 4, "how": [5, 6, 7, 9, 13, 14], "ht": 11, "html": 4, "http": [0, 4, 7, 9, 11, 13], "hua": 5, "hyper": 13, "hyperbox": 5, "hyperparamet": [6, 13], "i": [0, 1, 2, 4, 5, 6, 7, 9, 11, 13, 14], "i8": 4, "ic": 11, "icdmw": 5, "id": 13, "idea": 13, "ieee": [5, 9], "ignor": [5, 6, 9, 13, 14], "ignore_first_neighbour": 5, "igraph": [2, 7], "igraphlabelgraphcluster": [3, 4, 7], "imbal": 11, "impact": [1, 14], "implement": [0, 1, 5, 6, 9, 12, 13, 14], "import": [0, 5, 7, 9, 11, 13, 14], "impur": 14, "includ": [1, 4, 7, 12, 13], "include_self_edg": 7, "incomplet": 11, "increas": 5, "increment": 7, "incur": 2, "index": [0, 7, 9, 13, 14], "indic": [4, 5, 6, 9, 11, 13, 14], "infer": [5, 7], "infomap": 7, "inform": [7, 11, 13, 14], "inherit": 7, "initi": [9, 11, 13], "inner": 14, "inproceed": [5, 13], "input": [4, 5, 6, 7, 9, 13, 14], "input_feature_typ": 4, "input_spac": 4, "insid": [1, 5, 6, 9, 13, 14], "instal": 2, "instanc": [5, 6, 7, 9, 11, 13, 14], "instancebasedlogisticregress": [3, 4, 6, 13], "instead": [4, 5, 6, 9, 13, 14], "instruct": 0, "int": [4, 5, 6, 7, 9, 11, 13, 14], "integ": 4, "integr": 0, "intellig": 5, "interfac": [0, 13], "interjourn": 7, "intern": [5, 13, 14], "introduc": [5, 9], "introspect": 6, "inverse_transform": [4, 13], "ioanni": 5, "issn": [5, 7, 9, 11], "issu": 5, "item": 11, "iter": [5, 6, 12, 13], "iterative_stratif": 12, "its": 13, "j": 11, "jaccard": 1, "jess": 13, "jie": 5, "job": 5, "joblib": 5, "joint": 13, "journal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "juli": 9, "jun": 11, "just": [5, 6, 7, 13], "k": [5, 6, 9, 11, 13], "kajdanowicz": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "kataki": 9, "kei": [4, 7], "kera": 0, "kernel": 13, "kerst": [7, 9], "keyword": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "kmean": 7, "knn": [5, 11], "knn_": 5, "knn_layer_": 13, "know": [5, 7], "knowledg": [7, 9, 13], "known": [2, 4], "kristian": [7, 9], "krzysztof": 13, "l": [11, 13], "label": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "label_count": 4, "label_loc": 4, "label_nam": 4, "label_propag": 7, "labelcooccurrencegraphbuild": [3, 4, 7], "labelgraphclustererbas": 7, "labelpowerset": [3, 4, 6, 7, 9, 13], "labelset": 9, "labelset_s": 9, "labelspaceclustererbas": [7, 9], "labelspacepartitioningclassifi": [3, 4, 7, 9], "lambda_param": 5, "laplacian": 11, "larg": [4, 5], "largest": 7, "last": 7, "latest": 0, "layer": [5, 6, 13], "lazi": 5, "lead": [5, 14], "leading_eigenvector": 7, "leaf": 14, "learn": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "least": [5, 7], "left": [7, 14], "left_label": 14, "leftov": 7, "legaci": 0, "len": 13, "lg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "li": 5, "liac": 4, "librari": [1, 4, 7, 11, 13], "licenc": 7, "licens": [0, 4], "liibrari": 2, "like": [0, 4, 6, 7, 11, 14], "lil_matrix": 4, "limit": 14, "linear": 13, "ling": 5, "link": 6, "list": [4, 5, 6, 7, 9, 13], "llermeier": 13, "load": [1, 4], "load_dataset": [3, 4], "load_dataset_dump": [3, 4], "load_from_arff": [3, 4], "load_spars": 4, "loader": 4, "locat": 5, "logist": [6, 13], "logisticregress": 13, "look": 7, "loss": [1, 5], "louvain": 7, "m": [5, 9, 11], "machin": [5, 13], "macro": 5, "major": 9, "majorityvotingclassifi": [3, 4, 7, 9], "make_multilabel_classif": 14, "mani": [5, 7], "map": [7, 13], "master": [0, 13], "mathemat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "matric": [7, 9, 13], "matrix": [4, 5, 6, 7, 9, 11, 13, 14], "matrix_creation_function_for_format": [3, 4], "matrix_format": 4, "matrixlabelspacecluster": [3, 4, 7], "max_depth": [13, 14], "max_featur": 13, "max_it": 13, "max_iter": 5, "max_leaf_nod": 13, "maxim": 7, "maximum": [1, 5, 14], "md5": 4, "mdpi": [7, 9], "mean": [5, 13], "measur": [1, 4, 12], "measure_per_label": [3, 4], "mechan": [5, 6, 9, 13, 14], "mediamil": 1, "median": 1, "meka": [0, 1, 4], "memori": 1, "meta": [5, 6, 9, 13, 14], "metaclassifi": 7, "metadata": [5, 6, 9, 13, 14], "metadata_rout": [5, 6, 9, 13, 14], "method": [0, 1, 2, 4, 5, 6, 7, 9, 11, 12, 13], "min": 5, "min_impurity_decreas": 13, "min_impurity_split": 13, "min_samples_leaf": [13, 14], "min_samples_split": [13, 14], "min_weight_fraction_leaf": 13, "mine": [5, 13], "minim": 1, "minimum": 14, "miss": [3, 4], "ml": [5, 6], "mlaram": [3, 4, 5], "mlaramfast": 5, "mlclassifierbas": [3, 4, 5, 6, 9, 13], "mlknn": [3, 4, 5], "mltsvm": [3, 4, 5], "mode": 2, "model": [6, 7, 9, 11, 13, 14], "model_count": [9, 13], "model_count_": [9, 13], "model_select": [3, 4, 5, 13], "modifi": 2, "modul": [0, 2, 3, 5, 6, 7, 9, 11, 12, 13], "modular": 7, "month": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "more": [0, 6, 7, 9, 14], "most": [1, 5, 7, 9, 13, 14], "mulan": [0, 1, 4], "mult": 9, "multi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "multilabel": [4, 5, 9, 13], "multilearn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "multilevel": 7, "multinomialnb": 13, "multipl": [7, 14], "must": [5, 6, 13, 14], "mutli": 13, "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "n_class": [13, 14], "n_cluster": 7, "n_estim": [7, 13], "n_featur": [4, 5, 6, 9, 11, 13, 14], "n_features_in_": 14, "n_job": [5, 13], "n_label": [4, 5, 6, 7, 9, 11, 13, 14], "n_sampl": [4, 5, 6, 7, 9, 11, 13, 14], "na": 5, "nai": 5, "naive_bay": [7, 9, 13], "name": [4, 5, 6, 7, 9, 12, 13, 14], "nan": 13, "nativ": 0, "ndaarrai": [5, 6, 9], "ndarrai": [5, 6, 7, 9, 13], "nearest": [5, 6, 11, 13], "nearestneighbor": 5, "need": 13, "neighbor": [5, 6, 11, 13], "neighbors_": 5, "neighbour": [5, 11], "nepusz": 7, "network": [2, 5, 7], "networkx": [2, 7], "networkxlabelgraphcluster": 7, "neucom": 11, "neural": 5, "neurocomput": 11, "neuron": 5, "never": 7, "next": 13, "ng": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "node": [4, 7, 14], "non": [4, 9], "none": [2, 4, 5, 6, 7, 9, 13, 14], "normal": [1, 5], "normalize_self_edg": 7, "normalizion": 1, "note": [0, 2, 5, 6, 7, 9], "notimplementederror": [5, 6], "nov": 5, "novel": 5, "np": 4, "number": [4, 5, 6, 7, 9, 11, 13, 14], "numer": 4, "numpi": [0, 4, 5, 6, 7, 9, 13], "object": [5, 6, 7, 9, 11, 13, 14], "obtain": [1, 13], "occur": 7, "occurr": 7, "off": 5, "one": [6, 7, 13], "onli": [5, 6, 7, 9, 13, 14], "oob_scor": 13, "openn": 0, "oper": 1, "optim": [5, 6, 11, 13, 14], "optimal_classifi": 13, "optimized_clfs_": 13, "option": [0, 4, 5, 6, 9, 11, 13, 14], "order": [7, 13], "org": [4, 7, 11, 13], "organ": 13, "origin": [5, 6, 9, 13, 14], "original_matrix": 4, "other": [5, 6, 9, 13, 14], "otherwis": [5, 6, 9, 11, 13, 14], "out": [1, 6], "output": [1, 5, 6, 7, 9, 11, 13, 14], "overfit": 14, "overlap": [7, 9], "overrelax": 5, "ovr": 13, "p": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "pacif": 13, "packag": [0, 3], "page": [0, 5, 7, 9, 11, 13], "paper": [5, 7, 9, 11, 13], "parallel": [1, 5], "parallel_backend": 5, "param": 6, "param_grid": 13, "paramet": 12, "part": 13, "particip": 5, "partit": [7, 9, 13, 14], "partition_": [9, 13], "pass": [4, 5, 6, 9, 13, 14], "pass_input_spac": 7, "path": 4, "pattern": 5, "pcc": 13, "pct": 14, "penalti": 5, "per": [1, 4, 7, 9, 13], "perfom": 1, "perform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "permut": 13, "pertain": 4, "pfahring": 13, "phase": 5, "pii": 11, "piotr": [7, 9], "pip": 0, "pipelin": [5, 6, 9, 13, 14], "pleas": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "point": [1, 14], "popular": 5, "posit": 4, "potenti": 14, "powerset": [1, 9, 13], "practic": 13, "pre_dispatch": 13, "preced": 13, "predefin": 7, "predict": [0, 4, 5, 6, 7, 9, 11, 13, 14], "predict_proba": [4, 5, 9, 13], "predictionsnorm": 11, "predictiveclusteringtre": [3, 4, 14], "present": [1, 13, 14], "prevent": 14, "previou": 13, "primaryclass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "print_best_param": 13, "prior": 5, "probabilist": 13, "probabilistic_classifier_chain": 13, "probabilisticclassifierchain": [3, 4, 13], "probabl": [5, 6, 9, 13], "problem": [6, 7, 9, 11, 13], "problem_transform": [0, 3, 4, 7, 9, 14], "problem_transform_classifi": 7, "problemtransformationbas": [3, 4, 6, 13], "proc": 5, "process": [1, 14], "processor": 5, "produc": 13, "program": 2, "programmat": 4, "propag": [6, 7], "properti": [6, 13], "propos": 13, "prototyp": 5, "provid": [0, 2, 5, 6, 7, 9, 11, 12, 13, 14], "pt": 11, "publish": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "purpos": 2, "put": [6, 7, 9, 13], "py": [0, 13], "python": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "qiaoyu": 11, "qualiti": [1, 4, 12], "quarter": 9, "r": 11, "rais": [9, 13, 14], "rakeld": [3, 4, 9], "rakelo": [3, 4, 9], "random": [1, 7, 9], "random_st": [13, 14], "randomforest": [7, 13], "randomforestclassifi": [7, 13], "randomlabelspacecluster": [3, 4, 7, 9], "randomli": 7, "rang": [5, 11, 13], "rbf": 13, "read": [4, 13], "read2009classifi": 13, "realiz": 13, "recognit": 5, "recogniz": 7, "recurs": [7, 14], "reduct": 5, "refer": 0, "refit": 13, "regress": [6, 11, 13], "regular": 5, "relat": [7, 9], "relationship": 13, "relev": [1, 5, 6, 9, 11, 13, 14], "reli": 14, "replac": [5, 7], "report": [0, 1], "repres": [1, 7, 14], "represent": [4, 7, 9, 13], "reproduc": 13, "request": [0, 5, 6, 9, 13, 14], "requir": [1, 4, 6, 7, 9, 13, 14], "require_dens": [0, 6, 7, 9, 13], "research": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "reset": [4, 5], "resid": 1, "resolv": [6, 13], "reson": 5, "respect": 1, "respons": 5, "restrict": 7, "result": [1, 4, 6, 7, 9, 13], "retain": [5, 6, 9, 13, 14], "return_attribute_definit": 4, "return_train_scor": 13, "reverse_combinations_": 13, "right": 14, "right_label": 14, "risk": 5, "root": 14, "rout": [5, 6, 9, 13, 14], "rule": 13, "run": [1, 5], "s092523121730704x": 11, "safe": 5, "same": [7, 13], "sampl": [5, 7, 14], "sample_weight": [5, 6, 9, 13, 14], "sapozhnikova": 5, "sarawagi": 13, "save": 4, "save_dataset_dump": [3, 4], "save_spars": 4, "save_to_arff": [3, 4], "scale": 5, "scenario": [1, 13], "scheme": [5, 7, 9, 11], "scienc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "sciencedirect": 11, "scientif": 0, "scikit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "scikit_ml_learn_data": 4, "scipi": [0, 4, 5, 6, 7, 9, 13], "score": [1, 4, 5, 6, 9, 13, 14], "seamlessli": 0, "search": [0, 5, 6, 7, 13], "second": [11, 13], "see": [0, 4, 5, 6, 7, 9, 13, 14], "select": [4, 5, 7, 13, 14], "self": [5, 6, 7, 9, 13, 14], "semanticscholar": 13, "semi": 11, "separ": [1, 7, 9, 13, 14], "seri": 13, "server": 4, "set": [1, 4, 5, 6, 7, 9, 11, 13], "set_config": [5, 6, 9, 13, 14], "set_nam": 4, "set_param": [4, 6], "set_score_request": [4, 5, 6, 9, 13, 14], "setn": 5, "setparam": [4, 11], "setup": [0, 7], "sever": 4, "shantanu": 13, "shao": 5, "shape": [4, 5, 6, 7, 9, 11, 13, 14], "should": [2, 4, 5, 6, 9, 13, 14], "shrink": 13, "signific": [1, 5], "similar": 11, "simpl": [5, 9], "simplifi": 2, "simul": 7, "singl": [1, 5, 6, 7, 13], "size": [1, 5, 6, 7, 9, 14], "ski": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "sklearn": [0, 5, 6, 7, 9, 13, 14], "skml": 13, "skmultilearn": [0, 2], "small": 5, "smaller": [1, 9], "smile": [3, 4, 11], "smooth": [5, 11], "so": 9, "softwar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "solv": 6, "some": [0, 2, 4, 5, 6, 9, 13, 14], "soon": 0, "sor_omega": 5, "sourc": 2, "space": [2, 4, 7, 9, 13, 14], "spars": [4, 5, 6, 7, 9, 11, 13], "sparse_format": 4, "specif": 14, "specifi": 14, "speed": 5, "split": 14, "splitcriterion": 14, "springer": 13, "spyromitro": 5, "src": 0, "start": 4, "state": 4, "step": [7, 13], "stochast": [2, 7], "stochasticblockmodel": 7, "store": [4, 7], "str": [4, 5, 6, 9, 13, 14], "stratif": 12, "string": [4, 7, 13], "structur": [6, 13], "structured_grid_search": 13, "structuredgridsearchcv": [3, 4, 6, 13], "studi": 5, "sub": [2, 5, 6, 9, 13, 14], "subclassifi": 9, "subdirectori": [0, 4], "sublist": 7, "submodul": [3, 14], "subpackag": 3, "subproblem": 7, "subset": [7, 9, 14], "subspac": [7, 9], "success": 5, "sum": [6, 9, 11], "sunita": 13, "supervis": 11, "suppli": 9, "support": [5, 7, 13, 14], "sure": 9, "svc": [0, 13], "svm": [0, 13], "symbol": 4, "syro": 5, "system": 7, "szyma": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "szyma\u0144ski": [7, 9], "t": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "tailor": 14, "taint": 7, "take": [5, 7], "taken": 1, "tama": 7, "tan": 11, "tan2017192": 11, "task": 0, "taskset": 1, "teach": 9, "term": [5, 11], "test": [1, 5, 11], "text": 5, "than": [1, 7, 9], "thei": 7, "them": [5, 7], "theori": 5, "therebi": 14, "therefor": [5, 13], "thi": [4, 5, 6, 7, 9, 11, 13, 14], "three": 1, "threshold": [5, 14], "through": [7, 13], "thu": [1, 2], "thunlp": 0, "time": [1, 4, 5, 7], "titl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "tkde": 9, "tol": 13, "tomasz": [7, 9], "too": 14, "top": [4, 5], "trade": 5, "train": [0, 5, 6, 7, 9, 11, 13, 14], "transact": 9, "transform": [4, 6, 7, 13], "transposit": 7, "trap": 7, "treat": 13, "tree": [1, 3, 4], "tree_": 14, "true": [0, 4, 5, 6, 7, 9, 13, 14], "truth": 4, "tsoumaka": [5, 9], "tune": [6, 13], "tupl": 7, "twice": 7, "twin": 5, "two": [6, 7, 11, 13], "type": [4, 6, 9], "u": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "unchang": [5, 6, 9, 13, 14], "under": [4, 6, 7, 9], "underli": 7, "underneath": [5, 9], "union": 13, "uniqu": 13, "unique_combin": 13, "unique_combinations_": 13, "unless": [5, 13], "unmodifi": 2, "unus": 7, "unweight": 7, "updat": [0, 5, 6, 9, 13, 14], "upon": [7, 14], "url": [7, 9, 11, 13], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "usag": 1, "user": [1, 4, 5, 6, 9, 13, 14], "usual": [5, 7], "util": [3, 5, 6, 9, 13, 14], "v": 1, "valid": [6, 13], "valu": [4, 6, 7, 9, 13, 14], "vari": 13, "variabl": 4, "variant": 4, "variant_nam": 4, "varieti": 0, "vector": [4, 5, 7, 13], "verbos": 13, "veri": [4, 5], "version": [0, 5, 6, 9, 13, 14], "via": [0, 7, 9, 13], "vigil": 5, "vlahava": [5, 9], "volum": [5, 7, 9, 11, 13], "vote": 9, "w": 11, "wa": [11, 13], "wai": [0, 13], "walk": 7, "walktrap": 7, "wang": 11, "want": 11, "warm_start": 13, "we": [1, 7, 11], "wei": 5, "weight": [7, 11], "weights_": 7, "weiwei": 13, "weka": 0, "well": [2, 4], "were": 1, "what": [4, 5], "when": [6, 7], "where": [5, 7, 13, 14], "whether": [4, 6, 7, 9, 13], "which": [1, 2, 4, 5, 6, 7, 9, 13], "while": 13, "wide": 2, "within": 4, "without": [4, 7], "work": [5, 6, 9, 13, 14], "workshop": 5, "worst": 1, "wrapper": 0, "www": [7, 9, 11], "x": [4, 5, 6, 7, 9, 11, 13, 14], "x_test": [0, 5, 7, 9, 13], "x_train": [0, 5, 7, 9, 13], "xt": 11, "y": [4, 5, 6, 7, 9, 11, 13, 14], "y_predict": 4, "y_train": [0, 5, 7, 9, 13], "y_true": 4, "yang": 5, "yanm": 11, "year": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "yic": 11, "yit": 11, "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "your": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "ypred": 11, "yu": 11, "yuan": 5, "zero": 4, "zhang": 5, "zhang2007ml": 5, "zhi": 5, "zhou": 5}, "titles": ["Welcome to scikit-multilearn-ng\u2019s documentation!", "Benchmark", "License", "skmultilearn", "skmultilearn package", "skmultilearn.adapt package", "skmultilearn.base package", "skmultilearn.cluster package", "skmultilearn.embedding package", "skmultilearn.ensemble package", "skmultilearn.ext package", "skmultilearn.missing package", "skmultilearn.model_selection package", "skmultilearn.problem_transform package", "skmultilearn.tree package"], "titleterms": {"": 0, "adapt": 5, "attribut": [5, 6, 7, 9, 11, 13, 14], "base": 6, "basic": 0, "benchmark": 1, "classif": 4, "cluster": 7, "contribut": 0, "dataset": 4, "depend": [0, 2], "document": 0, "embed": 8, "ensembl": 9, "exampl": [5, 7, 9, 11, 13, 14], "ext": 10, "featur": 0, "gpl": 2, "indic": 0, "instal": 0, "label": 4, "librari": 2, "licens": 2, "method": 14, "miss": 11, "model_select": 12, "modul": 4, "multi": 4, "multilearn": 0, "ng": 0, "note": [13, 14], "packag": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "paramet": [4, 5, 6, 7, 9, 11, 13, 14], "problem_transform": 13, "python": 4, "rais": [5, 6], "refer": [5, 7, 9, 11, 13], "return": [4, 5, 6, 7, 9, 11, 13, 14], "scikit": 0, "skmultilearn": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "submodul": 4, "subpackag": 4, "tabl": 0, "tree": 14, "usag": 0, "util": 4, "welcom": 0}})