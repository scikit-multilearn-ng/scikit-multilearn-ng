Search.setIndex({"docnames": ["index", "source/benchmark", "source/license", "source/modules", "source/skmultilearn", "source/skmultilearn.adapt", "source/skmultilearn.base", "source/skmultilearn.cluster", "source/skmultilearn.embedding", "source/skmultilearn.ensemble", "source/skmultilearn.ext", "source/skmultilearn.missing", "source/skmultilearn.model_selection", "source/skmultilearn.problem_transform", "source/skmultilearn.tree"], "filenames": ["index.rst", "source/benchmark.rst", "source/license.rst", "source/modules.rst", "source/skmultilearn.rst", "source/skmultilearn.adapt.rst", "source/skmultilearn.base.rst", "source/skmultilearn.cluster.rst", "source/skmultilearn.embedding.rst", "source/skmultilearn.ensemble.rst", "source/skmultilearn.ext.rst", "source/skmultilearn.missing.rst", "source/skmultilearn.model_selection.rst", "source/skmultilearn.problem_transform.rst", "source/skmultilearn.tree.rst"], "titles": ["Welcome to scikit-multilearn-ng\u2019s documentation!", "Benchmark", "License", "skmultilearn", "skmultilearn package", "skmultilearn.adapt package", "skmultilearn.base package", "skmultilearn.cluster package", "skmultilearn.embedding package", "skmultilearn.ensemble package", "skmultilearn.ext package", "skmultilearn.missing package", "skmultilearn.model_selection package", "skmultilearn.problem_transform package", "skmultilearn.tree package"], "terms": {"i": [0, 1, 2, 4, 5, 6, 7, 9, 11, 13], "python": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "modul": [0, 2, 3, 5, 6, 7, 9, 11, 12, 13], "capabl": 0, "perform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "multi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "label": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "learn": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "task": 0, "build": [0, 5, 7, 9], "legaci": 0, "It": [0, 5, 6, 11, 13], "integr": 0, "seamlessli": 0, "scientif": 0, "packag": [0, 3], "like": [0, 4, 6, 7, 11], "numpi": [0, 4, 5, 6, 7, 9, 13], "scipi": [0, 4, 5, 6, 7, 9, 13], "follow": [0, 1, 2, 5, 6, 7, 9, 11, 13], "familiar": 0, "api": [0, 6, 7], "akin": 0, "nativ": 0, "implement": [0, 1, 5, 6, 9, 12, 13], "varieti": 0, "classif": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "algorithm": [0, 1, 5, 11, 13], "interfac": [0, 13], "meka": [0, 1, 4], "provid": [0, 2, 5, 6, 7, 9, 11, 12, 13], "access": [0, 6, 9], "all": [0, 1, 2, 4, 5, 6, 7, 9, 13], "method": [0, 1, 2, 4, 5, 6, 7, 9, 11, 12, 13], "avail": [0, 4, 5, 9, 11, 12], "mulan": [0, 1, 4], "weka": 0, "via": [0, 7, 9, 13], "wrapper": 0, "class": [0, 5, 6, 7, 9, 11, 13], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "base": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "classifi": [0, 1, 4, 5, 6, 7, 9, 11, 13], "benefit": 0, "from": [0, 1, 4, 5, 6, 7, 9, 11, 13], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "effici": 0, "To": [0, 1], "pip": 0, "For": [0, 7, 13], "latest": 0, "develop": 0, "version": [0, 5, 6, 9, 13], "git": 0, "clone": [0, 6], "http": [0, 4, 7, 9, 11], "github": 0, "com": [0, 7, 9, 11], "cd": 0, "setup": [0, 7], "py": 0, "option": [0, 4, 5, 6, 9, 11, 13], "can": [0, 2, 4, 5, 6, 7, 9, 13], "gpl": [0, 7], "kera": 0, "openn": 0, "thunlp": 0, "master": 0, "subdirectori": [0, 4], "src": 0, "note": [0, 2, 5, 6, 7, 9], "licens": [0, 4], "graphtool": [0, 2], "more": [0, 6, 7, 9], "complex": [0, 7], "pleas": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "refer": 0, "instruct": 0, "import": [0, 5, 7, 9, 11, 13], "binaryrelev": [0, 3, 4, 6, 9, 13], "skmultilearn": [0, 2], "problem_transform": [0, 3, 4, 7, 9], "sklearn": [0, 5, 6, 7, 9, 13], "svm": [0, 13], "svc": [0, 13], "require_dens": [0, 6, 7, 9, 13], "fals": [0, 4, 5, 6, 7, 9, 13], "true": [0, 4, 5, 6, 7, 9, 13], "train": [0, 5, 6, 7, 9, 11, 13], "fit": [0, 4, 5, 6, 7, 9, 11, 13], "x_train": [0, 5, 7, 9, 13], "y_train": [0, 5, 7, 9, 13], "predict": [0, 4, 5, 6, 7, 9, 11, 13], "x_test": [0, 5, 7, 9, 13], "see": [0, 4, 5, 6, 7, 9, 13], "exampl": 0, "page": [0, 5, 7, 9, 11, 13], "case": [0, 1, 5, 7, 11, 13], "ad": [0, 5], "soon": 0, "ar": [0, 1, 2, 5, 6, 7, 9, 11, 13], "here": [0, 5, 9], "some": [0, 2, 4, 5, 6, 9, 13], "wai": [0, 13], "report": [0, 1], "fix": [0, 5, 7], "bug": 0, "request": [0, 5, 6, 9, 13], "demonstr": 0, "updat": [0, 5, 6, 9, 13], "index": [0, 7, 9, 13], "search": [0, 5, 6, 7, 13], "cite": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "u": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "your": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "research": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "publish": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "consid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "articl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "2017arxiv170201460": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "author": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "szyma": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "ski": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "p": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "kajdanowicz": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "t": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "titl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "environ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "journal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "arxiv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "archiveprefix": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "eprint": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "1702": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "01460": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "primaryclass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "lg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "keyword": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "scienc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "mathemat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "softwar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "year": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "2017": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "month": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "feb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "In": [1, 5, 13], "most": [1, 5, 7, 9, 13], "scikit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "multilearn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "ng": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "also": [1, 5, 6, 7], "oper": 1, "faster": 1, "than": [1, 7, 9], "apart": 1, "edg": [1, 7], "binari": [1, 2, 4, 5, 6, 7, 9, 13], "relev": [1, 5, 6, 9, 11, 13], "mediamil": 1, "data": [1, 4, 5, 6, 7, 9, 11, 13], "set": [1, 4, 5, 6, 7, 9, 11, 13], "normal": [1, 5], "100": [1, 7, 13], "worst": 1, "median": 1, "user": [1, 4, 5, 6, 9, 13], "run": [1, 5], "time": [1, 4, 5, 7], "": [1, 4, 5, 6, 7, 9, 11, 13], "memori": 1, "usag": 1, "powerset": [1, 9, 13], "random": [1, 7, 9], "forest": [1, 7], "The": [1, 4, 5, 6, 7, 9, 11, 12, 13], "closer": 1, "librari": [1, 4, 7, 11, 13], "point": 1, "0": [1, 4, 5, 6, 7, 9, 11, 13], "better": [1, 7, 9], "thu": [1, 2], "smaller": [1, 9], "area": 1, "insid": [1, 5, 6, 9, 13], "curv": 1, "figur": 1, "present": [1, 13], "requir": [1, 4, 6, 7, 9, 13], "includ": [1, 4, 7, 12], "load": [1, 4], "arff": [1, 4], "measur": [1, 4, 12], "error": [1, 5, 6, 9, 13], "complet": 1, "scenario": [1, 13], "As": [1, 11, 13], "differ": 1, "amount": 1, "we": [1, 7, 11], "decid": [1, 7], "chart": 1, "result": [1, 4, 6, 7, 9, 13], "each": [1, 4, 5, 6, 7, 9, 13], "separ": [1, 7, 9, 13], "normalizion": 1, "calcul": 1, "out": [1, 6], "everi": 1, "perfom": 1, "highest": [1, 13], "best": [1, 9, 13], "per": [1, 4, 7, 9, 13], "were": 1, "forc": 1, "singl": [1, 5, 6, 7, 13], "core": 1, "taskset": 1, "command": 1, "minim": 1, "parallel": [1, 5], "effect": [1, 5, 6, 9, 13], "comparison": 1, "obtain": [1, 13], "v": 1, "repres": [1, 7], "maximum": [1, 5], "resid": 1, "size": [1, 5, 6, 7, 9], "respect": 1, "taken": 1, "consider": [1, 7], "cpu": 1, "had": 1, "been": [1, 7], "assign": [1, 4, 5, 6, 7, 9, 13], "process": 1, "which": [1, 2, 4, 5, 6, 7, 9, 13], "did": [1, 7], "test": [1, 5, 11], "adapt": [1, 3, 4, 11], "three": 1, "impact": 1, "have": [1, 11], "fast": [1, 7], "10": [1, 5, 7, 9, 11, 13], "tree": [1, 3, 4], "check": 1, "qualiti": [1, 4, 12], "find": [1, 5, 7, 13], "signific": [1, 5], "between": [1, 5, 6, 7, 11, 13], "ham": 1, "loss": [1, 5], "jaccard": 1, "accuraci": [1, 13], "score": [1, 4, 5, 6, 9, 13], "output": [1, 5, 6, 7, 9, 11, 13], "wide": 2, "emploi": [2, 7], "copyleft": 2, "commun": [2, 7], "bsd": [2, 4], "2": [2, 5, 7, 9, 13], "claus": 2, "simplifi": 2, "copi": [2, 6], "distribut": 2, "unmodifi": 2, "sourc": 2, "form": 2, "program": 2, "modifi": 2, "accompani": 2, "mode": 2, "sub": [2, 5, 6, 9, 13], "function": [2, 4, 5, 6, 7, 13], "cluster": [2, 3, 4, 5, 9, 11], "stochast": [2, 7], "blockmodel": [2, 7], "igraph": [2, 7], "detect": [2, 7], "ani": 2, "incur": 2, "codebas": 2, "commerci": 2, "purpos": 2, "network": [2, 5, 7], "space": [2, 4, 7, 9, 13], "divis": [2, 7, 9], "should": [2, 4, 5, 6, 9, 13], "networkx": [2, 7], "well": [2, 4], "known": [2, 4], "liibrari": 2, "none": [2, 4, 5, 6, 7, 9, 13], "instal": 2, "default": [2, 4, 5, 6, 7, 9, 11, 13], "subpackag": 3, "brknnaclassifi": [3, 4, 5], "brknnbclassifi": [3, 4, 5], "mlaram": [3, 4, 5], "mltsvm": [3, 4, 5], "mlknn": [3, 4, 5], "mlclassifierbas": [3, 4, 5, 6, 9, 13], "problemtransformationbas": [3, 4, 6, 13], "fixedlabelspacecluster": [3, 4, 7, 9], "igraphlabelgraphcluster": [3, 4, 7], "labelcooccurrencegraphbuild": [3, 4, 7], "matrixlabelspacecluster": [3, 4, 7], "randomlabelspacecluster": [3, 4, 7, 9], "embed": [3, 4], "ensembl": [3, 4, 6, 7, 13], "labelspacepartitioningclassifi": [3, 4, 7, 9], "majorityvotingclassifi": [3, 4, 7, 9], "rakeld": [3, 4, 9], "rakelo": [3, 4, 9], "ext": [3, 4], "miss": [3, 4], "smile": [3, 4, 11], "model_select": [3, 4, 5, 13], "classificationheterogeneousfeatur": [3, 4, 6, 13], "classifierchain": [3, 4, 6, 7, 9, 13], "instancebasedlogisticregress": [3, 4, 6, 13], "labelpowerset": [3, 4, 6, 7, 9, 13], "structuredgridsearchcv": [3, 4, 6, 13], "submodul": 3, "dataset": [3, 5, 13], "available_data_set": [3, 4], "clear_data_hom": [3, 4], "download_dataset": [3, 4], "get_data_hom": [3, 4], "load_dataset": [3, 4], "load_dataset_dump": [3, 4], "load_from_arff": [3, 4], "save_dataset_dump": [3, 4], "save_to_arff": [3, 4], "util": [3, 5, 6, 9, 13], "get_matrix_in_format": [3, 4], "matrix_creation_function_for_format": [3, 4], "measure_per_label": [3, 4], "built": 4, "top": [4, 5], "ecosystem": 4, "set_score_request": [4, 5, 6, 9, 13], "predict_proba": [4, 5, 9, 13], "reset": [4, 5], "get_param": [4, 6], "set_param": [4, 6], "fit_predict": [4, 7], "transform": [4, 6, 7, 13], "getparam": [4, 11], "setparam": [4, 11], "set_fit_request": [4, 13], "inverse_transform": [4, 13], "find_optm_classifi": [4, 13], "list": [4, 5, 6, 7, 9, 13], "variant": 4, "dict": [4, 6, 7, 13], "set_nam": 4, "variant_nam": 4, "md5": 4, "file_nam": 4, "kei": [4, 7], "pertain": 4, "valu": [4, 6, 7, 9, 13], "file": 4, "name": [4, 5, 6, 7, 9, 12, 13], "server": 4, "data_hom": 4, "delet": 4, "content": 4, "home": 4, "cach": 4, "str": [4, 5, 6, 9, 13], "path": 4, "directori": 4, "store": [4, 7], "download": 4, "custom": 4, "folder": 4, "disk": 4, "dir": 4, "thi": [4, 5, 6, 7, 9, 11, 13], "larg": [4, 5], "loader": 4, "avoid": 4, "sever": 4, "By": 4, "scikit_ml_learn_data": 4, "altern": 4, "variabl": 4, "programmat": 4, "give": 4, "an": [4, 5, 6, 7, 9, 11, 13], "explicit": 4, "symbol": 4, "expand": 4, "doe": [4, 5], "alreadi": 4, "exist": [4, 5, 6, 9, 13], "automat": [4, 7, 9], "creat": [4, 11, 13], "gener": [4, 6, 7], "state": 4, "abov": [4, 5], "under": [4, 6, 7, 9], "pass": [4, 5, 6, 9, 13], "select": [4, 5, 7, 13], "given": [4, 5, 6, 7, 9, 13], "multilabel": [4, 5, 9, 13], "format": [4, 7, 13], "data_set": 4, "filenam": 4, "compress": [4, 5, 7], "dump": 4, "without": [4, 7], "bz2": 4, "end": 4, "extens": 4, "append": [4, 6, 7], "x": [4, 5, 6, 7, 9, 11, 13], "array_lik": [4, 9, 13], "matrix": [4, 5, 6, 7, 9, 11, 13], "spars": [4, 5, 6, 7, 9, 11, 13], "shape": [4, 5, 6, 7, 9, 11, 13], "n_sampl": [4, 5, 6, 7, 9, 11, 13], "n_featur": [4, 5, 6, 9, 11, 13], "input": [4, 5, 6, 7, 9, 13], "featur": [4, 5, 6, 9, 13], "y": [4, 5, 6, 7, 9, 11, 13], "1": [4, 5, 6, 7, 9, 11, 13], "n_label": [4, 5, 6, 7, 9, 11, 13], "indic": [4, 5, 6, 9, 11, 13], "attribut": 4, "column": [4, 13], "label_count": 4, "label_loc": 4, "input_feature_typ": 4, "float": [4, 5, 7, 9, 11, 13], "encode_nomin": 4, "load_spars": 4, "return_attribute_definit": 4, "arrai": [4, 5, 6, 7, 11], "labelcount": 4, "integ": 4, "number": [4, 5, 6, 7, 9, 11, 13], "endian": 4, "big": 4, "littl": 4, "whether": [4, 6, 7, 9, 13], "contain": [4, 7, 9], "begin": 4, "start": 4, "type": [4, 6, 9], "string": [4, 7, 13], "desir": [4, 7, 9], "i8": 4, "doc": 4, "org": [4, 7, 11], "basic": [4, 13], "html": 4, "bool": [4, 5, 6, 7, 9, 13], "convert": [4, 7, 13], "categor": 4, "numer": 4, "factor": 4, "handl": [4, 6, 7], "non": [4, 9], "boolean": [4, 6], "read": [4, 13], "liac": 4, "break": 4, "enabl": 4, "definit": 4, "lil_matrix": 4, "input_spac": 4, "feature_nam": 4, "label_nam": 4, "save": 4, "vector": [4, 5, 7, 13], "5th": [4, 5], "posit": 4, "ha": [4, 5, 6, 7, 9, 13], "5": [4, 5, 7, 9, 11], "save_spars": 4, "dictionari": [4, 6, 7], "instead": [4, 5, 6, 9, 13], "zero": 4, "within": 4, "veri": [4, 5], "represent": [4, 7, 9, 13], "original_matrix": 4, "matrix_format": 4, "np": 4, "sparse_format": 4, "y_true": 4, "y_predict": 4, "compat": [4, 6, 7, 9, 13], "callabl": 4, "ground": 4, "truth": 4, "int": [4, 5, 6, 7, 9, 11, 13], "depend": [4, 5, 6, 13], "what": [4, 5], "approach": [5, 6, 7, 9, 13], "concentr": 5, "usual": [5, 7], "chang": [5, 6, 9, 13], "cost": 5, "decis": 5, "current": [5, 6, 7, 9, 11, 12], "scheme": [5, 7, 9, 11], "descript": [5, 7, 9, 11, 12, 13], "knn": [5, 11], "least": [5, 7], "half": [5, 9], "neighbor": [5, 6, 11, 13], "m": [5, 9, 11], "averag": 5, "bayesian": [5, 13], "prior": 5, "correct": 5, "hierarch": 5, "aram": 5, "neural": 5, "twin": 5, "support": [5, 7, 13], "machin": [5, 13], "k": [5, 6, 9, 11, 13], "_binaryrelevanceknn": 5, "nearest": [5, 6, 11, 13], "neighbour": [5, 11], "knn_": 5, "instanc": [5, 6, 7, 9, 11, 13], "nearestneighbor": 5, "underneath": [5, 9], "neighbors_": 5, "sampl": [5, 7], "confidences_": 5, "confid": 5, "paper": [5, 7, 9, 11, 13], "inproceed": [5, 13], "eleftheriosspyromitros2008": 5, "eleftherio": 5, "spyromitro": 5, "grigorio": 5, "tsoumaka": [5, 9], "ioanni": 5, "vlahava": [5, 9], "booktitl": [5, 13], "proc": 5, "hellen": 5, "confer": [5, 13], "artifici": 5, "intellig": 5, "setn": 5, "2008": 5, "empir": 5, "studi": 5, "lazi": 5, "locat": 5, "syro": 5, "greec": 5, "simpl": [5, 9], "3": [5, 6, 7, 9, 13], "gridsearchcv": [5, 13], "optim": [5, 6, 11, 13], "rang": [5, 11, 13], "f1_macro": 5, "clf": [5, 13], "sample_weight": [5, 6, 9, 13], "unchang": [5, 6, 9, 13], "metadata": [5, 6, 9, 13], "onli": [5, 6, 7, 9, 13], "enable_metadata_rout": [5, 6, 9, 13], "set_config": [5, 6, 9, 13], "guid": [5, 6, 7, 9, 13], "how": [5, 6, 7, 9, 13], "rout": [5, 6, 9, 13], "mechan": [5, 6, 9, 13], "work": [5, 6, 9, 13], "ignor": [5, 6, 9, 13], "meta": [5, 6, 9, 13], "estim": [5, 6, 9, 11, 12, 13], "alia": [5, 6, 9, 13], "origin": [5, 6, 9, 13], "metadata_rout": [5, 6, 9, 13], "retain": [5, 6, 9, 13], "allow": [5, 6, 7, 9, 13], "other": [5, 6, 9, 13], "new": [5, 6, 9, 13], "g": [5, 6, 9, 13], "pipelin": [5, 6, 9, 13], "otherwis": [5, 6, 9, 11, 13], "self": [5, 6, 7, 9, 13], "object": [5, 6, 7, 9, 11, 13], "popular": 5, "where": [5, 7, 13], "f1": 5, "macro": 5, "vigil": 5, "9": 5, "threshold": 5, "02": 5, "neuron": 5, "haram": 5, "scale": 5, "text": 5, "aim": 5, "increas": 5, "speed": 5, "extra": [5, 6, 13], "art": 5, "layer": [5, 6, 13], "prototyp": 5, "activ": 5, "replac": [5, 7], "small": 5, "fraction": 5, "them": [5, 7], "lead": 5, "reduct": 5, "reson": 5, "theori": 5, "control": 5, "hyperbox": 5, "assum": [5, 7, 13], "8": [5, 7, 9, 11], "999": 5, "respons": 5, "creation": 5, "therefor": [5, 13], "mani": [5, 7], "particip": 5, "phase": 5, "7395756": 5, "f": 5, "benit": 5, "sapozhnikova": 5, "2015": 5, "ieee": [5, 9], "intern": [5, 13], "mine": [5, 13], "workshop": 5, "icdmw": 5, "volum": [5, 7, 9, 11, 13], "847": 5, "854": 5, "doi": [5, 7, 9, 11], "1109": [5, 9], "14": 5, "issn": [5, 7, 9, 11], "2375": 5, "9259": 5, "nov": 5, "code": [5, 7], "95": 5, "05": 5, "ndarrai": [5, 6, 7, 9, 13], "dens": [5, 6, 7, 9, 13], "mlaramfast": 5, "csc_matrix": [5, 6, 9], "probabl": [5, 6, 9, 13], "c_k": 5, "sor_omega": 5, "1e": 5, "06": 5, "lambda_param": 5, "max_iter": 5, "500": 5, "risk": 5, "penalti": 5, "determin": 5, "trade": 5, "off": 5, "term": [5, 11], "smooth": [5, 11], "6": [5, 9, 11], "regular": 5, "iter": [5, 6, 12, 13], "success": 5, "overrelax": 5, "introduc": [5, 9], "chen2016mltsvm": 5, "novel": 5, "chen": 5, "wei": 5, "jie": 5, "shao": 5, "yuan": 5, "hai": 5, "li": 5, "chun": 5, "na": 5, "deng": 5, "nai": 5, "yang": 5, "pattern": 5, "recognit": 5, "52": 5, "61": 5, "74": 5, "2016": [5, 7, 9], "elsevi": 5, "best_params_": [5, 13], "best_score_": [5, 13], "03125": 5, "347518217573": 5, "abstract": [5, 6], "must": [5, 6, 13], "ndaarrai": [5, 6, 9], "notimplementederror": [5, 6], "just": [5, 6, 7, 13], "ignore_first_neighbour": 5, "n_job": [5, 13], "infer": [5, 7], "take": [5, 7], "account": 5, "abil": 5, "first": [5, 13], "compar": 5, "job": 5, "mean": [5, 13], "unless": 5, "joblib": 5, "parallel_backend": 5, "context": 5, "processor": 5, "don": 5, "know": [5, 7], "safe": 5, "issu": 5, "zhang2007ml": 5, "ml": [5, 6], "zhang": 5, "min": 5, "ling": 5, "zhou": 5, "zhi": 5, "hua": 5, "40": 5, "7": [5, 9, 13], "2038": 5, "2048": 5, "2007": 5, "78988303374297597": 5, "two": [6, 7, 11, 13], "problem": [6, 7, 9, 11, 13], "baseestim": [6, 9, 13], "classifiermixin": 6, "common": [6, 7], "especi": 6, "get": [6, 7], "param": 6, "copyable_attr": 6, "when": [6, 7], "deep": 6, "introspect": 6, "model": [6, 7, 9, 11, 13], "cross": [6, 13], "valid": [6, 13], "grid": [6, 13], "hold": 6, "propag": [6, 7], "link": 6, "one": [6, 7, 13], "solv": 6, "sum": [6, 9, 11], "augment": [6, 13], "deriv": [6, 13], "resolv": [6, 13], "cyclic": [6, 13], "combin": [6, 13], "logist": [6, 13], "regress": [6, 11, 13], "hyperparamet": [6, 13], "tune": [6, 13], "structur": [6, 13], "properti": [6, 13], "automag": 6, "put": [6, 7, 9, 13], "futur": [6, 9], "gather": 7, "predefin": 7, "driven": [7, 9], "expert": 7, "knowledg": [7, 9, 13], "graphtoollabelgraphcluster": 7, "block": 7, "graph": [7, 11], "stochasticblockmodel": 7, "randomli": 7, "divid": [7, 9], "equal": [7, 9, 13], "networkxlabelgraphcluster": 7, "labelspaceclustererbas": [7, 9], "partit": [7, 9, 13], "about": 7, "ex": 7, "randomforest": [7, 13], "subproblem": 7, "defin": [7, 13], "upon": 7, "randomforestclassifi": [7, 13], "n_estim": [7, 13], "4": [7, 9, 11], "unus": 7, "left": 7, "arrrai": 7, "sublist": 7, "graph_build": 7, "labelgraphclustererbas": 7, "construct": [7, 9, 13], "builder": 7, "describ": 7, "concern": 7, "graphbuilderbas": 7, "inherit": 7, "adjac": 7, "weight": [7, 11], "map": [7, 13], "underli": 7, "fastgreedi": 7, "largest": 7, "modular": 7, "increment": 7, "greedi": 7, "infomap": 7, "through": [7, 13], "inform": [7, 11, 13], "flow": 7, "simul": 7, "walk": 7, "label_propag": 7, "color": 7, "multipl": 7, "leading_eigenvector": 7, "eigenvector": 7, "multilevel": 7, "recurs": 7, "communitii": 7, "step": 7, "maxim": 7, "walktrap": 7, "trap": 7, "graph_": 7, "weights_": 7, "order": [7, 13], "recogniz": 7, "licenc": 7, "taint": 7, "restrict": 7, "gabor": 7, "csardi": 7, "tama": 7, "nepusz": 7, "interjourn": 7, "system": 7, "1695": 7, "2006": 7, "url": [7, 9, 11], "datadriven": [7, 9], "szyma\u0144ski": [7, 9], "piotr": [7, 9], "tomasz": [7, 9], "kerst": [7, 9], "kristian": [7, 9], "choic": [7, 9], "entropi": [7, 9, 13], "18": [7, 9, 13], "article_numb": [7, 9], "282": [7, 9], "www": [7, 9, 11], "mdpi": [7, 9], "1099": [7, 9], "4300": [7, 9], "3390": [7, 9], "e18080282": [7, 9], "look": 7, "base_classifi": [7, 9], "1000": 7, "relat": [7, 9], "thei": 7, "co": 7, "occur": 7, "include_self_edg": 7, "matric": [7, 9, 13], "problem_transform_classifi": 7, "metaclassifi": 7, "explor": [7, 9], "normalize_self_edg": 7, "node": 7, "connect": 7, "both": 7, "unweight": 7, "occurr": 7, "full": 7, "chain": [7, 9, 13], "subspac": [7, 9], "naive_bay": [7, 9, 13], "gaussiannb": [7, 9], "louvain": 7, "tupl": 7, "pass_input_spac": 7, "clustermixin": 7, "clonabl": 7, "kmean": 7, "1030": 7, "n_cluster": 7, "execut": 7, "either": [7, 13], "transposit": 7, "align": 7, "expect": 7, "cluster_s": 7, "cluster_count": 7, "allow_overlap": 7, "draw": 7, "subset": [7, 9], "overlap": [7, 9], "clr": 7, "dtype": 7, "leftov": 7, "addit": 7, "last": 7, "even": 7, "never": 7, "same": [7, 13], "twice": 7, "distinct": 9, "labelset": 9, "major": 9, "agre": 9, "suppli": 9, "mult": 9, "subclassifi": 9, "model_count_": [9, 13], "partition_": [9, 13], "_generate_partit": [9, 13], "advanc": 9, "found": [9, 13], "rais": [9, 13], "vote": 9, "labelset_s": 9, "base_classifier_require_dens": 9, "accord": [9, 13], "_label_count": 9, "classifier_": 9, "5567103": 9, "kataki": 9, "transact": 9, "engin": 9, "2011": 9, "23": 9, "1079": 9, "1089": 9, "tkde": 9, "2010": 9, "164": 9, "1041": 9, "4347": 9, "juli": 9, "teach": 9, "four": 9, "model_count": [9, 13], "Will": 9, "so": 9, "2m": 9, "being": 9, "initi": [9, 11, 13], "quarter": 9, "sure": 9, "deal": 11, "semi": 11, "supervis": 11, "incomplet": 11, "alpha": [11, 13], "35": 11, "imbal": 11, "assumpt": 11, "ensur": 11, "similar": 11, "balanc": 11, "equat": 11, "dure": 11, "want": 11, "l": [11, 13], "correl": 11, "w": 11, "estimate_matrix": 11, "ic": 11, "yit": 11, "yic": 11, "h": [11, 13], "diagon": 11, "element": 11, "diagonal_lambda": 11, "laplacian": 11, "hc": 11, "1t": 11, "ht": 11, "xt": 11, "ypred": 11, "r": 11, "dxc": 11, "b": 11, "bia": 11, "second": [11, 13], "item": 11, "pt": 11, "tan2017192": 11, "qiaoyu": 11, "tan": 11, "yanm": 11, "yu": 11, "guoxian": 11, "jun": 11, "wang": 11, "neurocomput": 11, "260": 11, "192": 11, "202": 11, "0925": 11, "2312": 11, "1016": 11, "j": 11, "neucom": 11, "04": 11, "033": 11, "sciencedirect": 11, "pii": 11, "s092523121730704x": 11, "wa": [11, 13], "predictionsnorm": 11, "stratif": 12, "paramet": 12, "iterative_stratif": 12, "treat": 13, "part": 13, "condit": 13, "br": 13, "cc": 13, "fine": 13, "constructor": 13, "union": 13, "classifiers_": 13, "relationship": 13, "anoth": 13, "done": 13, "below": 13, "multinomialnb": 13, "alongsid": 13, "classifier__alpha": 13, "classifier__kernel": 13, "rbf": 13, "linear": 13, "cache_s": 13, "200": 13, "class_weight": 13, "coef0": 13, "decision_function_shap": 13, "ovr": 13, "degre": 13, "gamma": 13, "auto": 13, "kernel": 13, "max_it": 13, "random_st": 13, "shrink": 13, "tol": 13, "001": 13, "verbos": 13, "17": 13, "heterogen": 13, "There": 13, "compos": 13, "propos": 13, "reproduc": 13, "produc": 13, "first_layer_": 13, "godbole2004discrimin": 13, "discrimin": 13, "godbol": 13, "shantanu": 13, "sarawagi": 13, "sunita": 13, "pacif": 13, "asia": 13, "discoveri": 13, "22": 13, "30": 13, "2004": 13, "organ": 13, "springer": 13, "correspond": 13, "21": 13, "jess": 13, "call": 13, "rule": 13, "next": 13, "previou": 13, "etc": 13, "permut": 13, "go": 13, "read2009classifi": 13, "pfahring": 13, "bernhard": 13, "holm": 13, "geoff": 13, "frank": 13, "eib": 13, "joint": 13, "european": 13, "databas": 13, "254": 13, "269": 13, "2009": 13, "class_prior": 13, "fit_prior": 13, "16": 13, "logisticregress": 13, "idea": 13, "practic": 13, "realiz": 13, "come": 13, "fill": 13, "while": 13, "knn_layer_": 13, "cheng2009combin": 13, "cheng": 13, "weiwei": 13, "llermeier": 13, "eyk": 13, "76": 13, "211": 13, "225": 13, "uniqu": 13, "id": 13, "unique_combinations_": 13, "reverse_combinations_": 13, "n_class": 13, "document": 13, "denot": 13, "len": 13, "unique_combin": 13, "classifier__criterion": 13, "gini": 13, "classifier__n_estim": 13, "20": 13, "50": 13, "bootstrap": 13, "criterion": 13, "max_depth": 13, "max_featur": 13, "max_leaf_nod": 13, "min_impurity_decreas": 13, "min_impurity_split": 13, "min_samples_leaf": 13, "min_samples_split": 13, "min_weight_fraction_leaf": 13, "oob_scor": 13, "warm_start": 13, "mutli": 13, "param_grid": 13, "refit": 13, "cv": 13, "pre_dispatch": 13, "error_scor": 13, "nan": 13, "return_train_scor": 13, "print_best_param": 13, "cannot": 13, "hyper": 13, "its": 13, "need": 13, "classifier_num": 13, "structured_grid_search": 13, "optimal_classifi": 13, "optimized_clfs_": 13}, "objects": {"": [[4, 0, 0, "-", "skmultilearn"]], "skmultilearn": [[5, 0, 0, "-", "adapt"], [6, 0, 0, "-", "base"], [7, 0, 0, "-", "cluster"], [4, 0, 0, "-", "dataset"], [9, 0, 0, "-", "ensemble"], [11, 0, 0, "-", "missing"], [12, 0, 0, "-", "model_selection"], [13, 0, 0, "-", "problem_transform"], [4, 0, 0, "-", "utils"]], "skmultilearn.adapt": [[5, 1, 1, "", "BRkNNaClassifier"], [5, 1, 1, "", "BRkNNbClassifier"], [5, 1, 1, "", "MLARAM"], [5, 1, 1, "", "MLTSVM"], [5, 1, 1, "", "MLkNN"]], "skmultilearn.adapt.BRkNNaClassifier": [[5, 2, 1, "", "set_score_request"]], "skmultilearn.adapt.BRkNNbClassifier": [[5, 2, 1, "", "set_score_request"]], "skmultilearn.adapt.MLARAM": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "predict_proba"], [5, 2, 1, "", "reset"], [5, 2, 1, "", "set_score_request"]], "skmultilearn.adapt.MLTSVM": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "set_score_request"]], "skmultilearn.adapt.MLkNN": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "predict_proba"], [5, 2, 1, "", "set_score_request"]], "skmultilearn.base": [[6, 1, 1, "", "MLClassifierBase"], [6, 1, 1, "", "ProblemTransformationBase"]], "skmultilearn.base.MLClassifierBase": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "set_params"], [6, 2, 1, "", "set_score_request"]], "skmultilearn.base.ProblemTransformationBase": [[6, 2, 1, "", "set_score_request"]], "skmultilearn.cluster": [[7, 1, 1, "", "FixedLabelSpaceClusterer"], [7, 1, 1, "", "IGraphLabelGraphClusterer"], [7, 1, 1, "", "LabelCooccurrenceGraphBuilder"], [7, 1, 1, "", "MatrixLabelSpaceClusterer"], [7, 1, 1, "", "RandomLabelSpaceClusterer"]], "skmultilearn.cluster.FixedLabelSpaceClusterer": [[7, 2, 1, "", "fit_predict"]], "skmultilearn.cluster.IGraphLabelGraphClusterer": [[7, 2, 1, "", "fit_predict"]], "skmultilearn.cluster.LabelCooccurrenceGraphBuilder": [[7, 2, 1, "", "transform"]], "skmultilearn.cluster.MatrixLabelSpaceClusterer": [[7, 2, 1, "", "fit_predict"]], "skmultilearn.cluster.RandomLabelSpaceClusterer": [[7, 2, 1, "", "fit_predict"]], "skmultilearn.dataset": [[4, 3, 1, "", "available_data_sets"], [4, 3, 1, "", "clear_data_home"], [4, 3, 1, "", "download_dataset"], [4, 3, 1, "", "get_data_home"], [4, 3, 1, "", "load_dataset"], [4, 3, 1, "", "load_dataset_dump"], [4, 3, 1, "", "load_from_arff"], [4, 3, 1, "", "save_dataset_dump"], [4, 3, 1, "", "save_to_arff"]], "skmultilearn.ensemble": [[9, 1, 1, "", "LabelSpacePartitioningClassifier"], [9, 1, 1, "", "MajorityVotingClassifier"], [9, 1, 1, "", "RakelD"], [9, 1, 1, "", "RakelO"]], "skmultilearn.ensemble.LabelSpacePartitioningClassifier": [[9, 2, 1, "", "predict"], [9, 2, 1, "", "set_score_request"]], "skmultilearn.ensemble.MajorityVotingClassifier": [[9, 2, 1, "", "predict"], [9, 2, 1, "", "predict_proba"], [9, 2, 1, "", "set_score_request"]], "skmultilearn.ensemble.RakelD": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "predict_proba"], [9, 2, 1, "", "set_score_request"]], "skmultilearn.ensemble.RakelO": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "predict_proba"], [9, 2, 1, "", "set_score_request"]], "skmultilearn.missing": [[11, 1, 1, "", "SMiLE"]], "skmultilearn.missing.SMiLE": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "getParams"], [11, 2, 1, "", "predict"], [11, 2, 1, "", "setParams"]], "skmultilearn.problem_transform": [[13, 1, 1, "", "BinaryRelevance"], [13, 1, 1, "", "ClassificationHeterogeneousFeature"], [13, 1, 1, "", "ClassifierChain"], [13, 1, 1, "", "InstanceBasedLogisticRegression"], [13, 1, 1, "", "LabelPowerset"], [13, 1, 1, "", "StructuredGridSearchCV"]], "skmultilearn.problem_transform.BinaryRelevance": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.problem_transform.ClassificationHeterogeneousFeature": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.problem_transform.ClassifierChain": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_fit_request"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.problem_transform.InstanceBasedLogisticRegression": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.problem_transform.LabelPowerset": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "inverse_transform"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"], [13, 2, 1, "", "transform"]], "skmultilearn.problem_transform.StructuredGridSearchCV": [[13, 2, 1, "", "find_optm_classifiers"], [13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "set_score_request"]], "skmultilearn.utils": [[4, 3, 1, "", "get_matrix_in_format"], [4, 3, 1, "", "matrix_creation_function_for_format"], [4, 3, 1, "", "measure_per_label"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "scikit": 0, "multilearn": 0, "ng": 0, "": 0, "document": 0, "featur": 0, "instal": 0, "depend": [0, 2], "basic": 0, "usag": 0, "contribut": 0, "indic": 0, "tabl": 0, "benchmark": 1, "licens": 2, "gpl": 2, "librari": 2, "skmultilearn": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "packag": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "multi": 4, "label": 4, "classif": 4, "modul": 4, "python": 4, "subpackag": 4, "submodul": 4, "dataset": 4, "return": [4, 5, 6, 7, 9, 11, 13], "paramet": [4, 5, 6, 7, 9, 11, 13], "util": 4, "adapt": 5, "attribut": [5, 6, 7, 9, 11, 13], "refer": [5, 7, 9, 11, 13], "exampl": [5, 7, 9, 11, 13], "rais": [5, 6], "base": 6, "cluster": 7, "embed": 8, "ensembl": 9, "ext": 10, "miss": 11, "model_select": 12, "problem_transform": 13, "note": 13, "tree": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Welcome to scikit-multilearn-ng\u2019s documentation!": [[0, "welcome-to-scikit-multilearn-ng-s-documentation"]], "Features": [[0, "features"]], "Installation & Dependencies": [[0, "installation-dependencies"]], "Basic Usage": [[0, "basic-usage"]], "Contributing": [[0, "contributing"]], "Indices and tables": [[0, "indices-and-tables"]], "Benchmark": [[1, "benchmark"]], "License": [[2, "license"]], "GPL library dependency": [[2, "gpl-library-dependency"]], "skmultilearn": [[3, "skmultilearn"]], "skmultilearn package": [[4, "module-skmultilearn"]], "Multi-label classification module for Python": [[4, "multi-label-classification-module-for-python"]], "Subpackages": [[4, "subpackages"]], "Submodules": [[4, "submodules"]], "skmultilearn.dataset module": [[4, "module-skmultilearn.dataset"]], "Returns": [[4, "returns"], [4, "id2"], [4, "id4"], [4, "id6"], [4, "id8"], [4, "id10"], [4, "id13"], [4, "id15"], [4, "id17"], [5, "returns"], [5, "id7"], [5, "id12"], [5, "id14"], [5, "id16"], [5, "id18"], [5, "id23"], [5, "id25"], [5, "id28"], [5, "id34"], [5, "id36"], [5, "id38"], [5, "id40"], [6, "returns"], [6, "id2"], [6, "id4"], [6, "id7"], [6, "id10"], [7, "returns"], [7, "id4"], [7, "id10"], [7, "id12"], [7, "id16"], [9, "returns"], [9, "id3"], [9, "id9"], [9, "id11"], [9, "id13"], [9, "id19"], [9, "id21"], [9, "id23"], [9, "id25"], [9, "id31"], [9, "id33"], [9, "id35"], [9, "id37"], [11, "returns"], [11, "id3"], [13, "returns"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id13"], [13, "id16"], [13, "id18"], [13, "id20"], [13, "id26"], [13, "id29"], [13, "id31"], [13, "id33"], [13, "id35"], [13, "id41"], [13, "id44"], [13, "id46"], [13, "id48"], [13, "id54"], [13, "id57"], [13, "id59"], [13, "id61"], [13, "id63"], [13, "id65"], [13, "id70"], [13, "id73"], [13, "id76"], [13, "id78"], [13, "id80"]], "Parameters": [[4, "parameters"], [4, "id1"], [4, "id3"], [4, "id5"], [4, "id7"], [4, "id9"], [4, "id11"], [4, "id12"], [4, "id14"], [4, "id16"], [5, "parameters"], [5, "id1"], [5, "id2"], [5, "id6"], [5, "id8"], [5, "id11"], [5, "id13"], [5, "id15"], [5, "id17"], [5, "id19"], [5, "id22"], [5, "id24"], [5, "id27"], [5, "id29"], [5, "id33"], [5, "id35"], [5, "id37"], [5, "id39"], [6, "parameters"], [6, "id1"], [6, "id3"], [6, "id6"], [6, "id8"], [6, "id9"], [7, "parameters"], [7, "id1"], [7, "id2"], [7, "id3"], [7, "id5"], [7, "id9"], [7, "id11"], [7, "id13"], [7, "id15"], [9, "parameters"], [9, "id1"], [9, "id2"], [9, "id4"], [9, "id8"], [9, "id10"], [9, "id12"], [9, "id14"], [9, "id18"], [9, "id20"], [9, "id22"], [9, "id24"], [9, "id26"], [9, "id30"], [9, "id32"], [9, "id34"], [9, "id36"], [11, "parameters"], [11, "id1"], [11, "id2"], [11, "id4"], [13, "parameters"], [13, "id1"], [13, "id3"], [13, "id5"], [13, "id7"], [13, "id9"], [13, "id12"], [13, "id15"], [13, "id17"], [13, "id19"], [13, "id21"], [13, "id25"], [13, "id28"], [13, "id30"], [13, "id32"], [13, "id34"], [13, "id36"], [13, "id40"], [13, "id43"], [13, "id45"], [13, "id47"], [13, "id49"], [13, "id53"], [13, "id56"], [13, "id58"], [13, "id60"], [13, "id62"], [13, "id64"], [13, "id66"], [13, "id69"], [13, "id72"], [13, "id75"], [13, "id77"], [13, "id79"]], "skmultilearn.utils module": [[4, "module-skmultilearn.utils"]], "skmultilearn.adapt package": [[5, "module-skmultilearn.adapt"]], "Attributes": [[5, "attributes"], [5, "id3"], [5, "id30"], [6, "attributes"], [7, "attributes"], [9, "attributes"], [9, "id5"], [9, "id15"], [9, "id27"], [11, "attributes"], [13, "attributes"], [13, "id10"], [13, "id22"], [13, "id37"], [13, "id50"], [13, "id67"]], "References": [[5, "references"], [5, "id4"], [5, "id9"], [5, "id20"], [5, "id31"], [7, "references"], [7, "id6"], [9, "references"], [9, "id16"], [9, "id28"], [11, "references"], [13, "references"], [13, "id23"], [13, "id38"]], "Examples": [[5, "examples"], [5, "id5"], [5, "id10"], [5, "id21"], [5, "id32"], [7, "examples"], [7, "id7"], [7, "id14"], [9, "examples"], [9, "id6"], [9, "id17"], [9, "id29"], [11, "examples"], [13, "examples"], [13, "id11"], [13, "id24"], [13, "id39"], [13, "id52"], [13, "id68"]], "Raises": [[5, "raises"], [5, "id26"], [6, "raises"], [6, "id5"]], "skmultilearn.base package": [[6, "module-skmultilearn.base"]], "skmultilearn.cluster package": [[7, "module-skmultilearn.cluster"]], "skmultilearn.embedding package": [[8, "skmultilearn-embedding-package"]], "skmultilearn.ensemble package": [[9, "module-skmultilearn.ensemble"]], "skmultilearn.ext package": [[10, "skmultilearn-ext-package"]], "skmultilearn.missing package": [[11, "module-skmultilearn.missing"]], "skmultilearn.model_selection package": [[12, "module-skmultilearn.model_selection"]], "skmultilearn.problem_transform package": [[13, "module-skmultilearn.problem_transform"]], "Notes": [[13, "notes"], [13, "id2"], [13, "id14"], [13, "id27"], [13, "id42"], [13, "id51"], [13, "id55"], [13, "id71"], [13, "id74"]], "skmultilearn.tree package": [[14, "skmultilearn-tree-package"]]}, "indexentries": {"available_data_sets() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.available_data_sets"]], "clear_data_home() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.clear_data_home"]], "download_dataset() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.download_dataset"]], "get_data_home() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.get_data_home"]], "get_matrix_in_format() (in module skmultilearn.utils)": [[4, "skmultilearn.utils.get_matrix_in_format"]], "load_dataset() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.load_dataset"]], "load_dataset_dump() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.load_dataset_dump"]], "load_from_arff() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.load_from_arff"]], "matrix_creation_function_for_format() (in module skmultilearn.utils)": [[4, "skmultilearn.utils.matrix_creation_function_for_format"]], "measure_per_label() (in module skmultilearn.utils)": [[4, "skmultilearn.utils.measure_per_label"]], "module": [[4, "module-skmultilearn"], [4, "module-skmultilearn.dataset"], [4, "module-skmultilearn.utils"], [5, "module-skmultilearn.adapt"], [6, "module-skmultilearn.base"], [7, "module-skmultilearn.cluster"], [9, "module-skmultilearn.ensemble"], [11, "module-skmultilearn.missing"], [12, "module-skmultilearn.model_selection"], [13, "module-skmultilearn.problem_transform"]], "save_dataset_dump() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.save_dataset_dump"]], "save_to_arff() (in module skmultilearn.dataset)": [[4, "skmultilearn.dataset.save_to_arff"]], "skmultilearn": [[4, "module-skmultilearn"]], "skmultilearn.dataset": [[4, "module-skmultilearn.dataset"]], "skmultilearn.utils": [[4, "module-skmultilearn.utils"]], "brknnaclassifier (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.BRkNNaClassifier"]], "brknnbclassifier (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.BRkNNbClassifier"]], "mlaram (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.MLARAM"]], "mltsvm (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.MLTSVM"]], "mlknn (class in skmultilearn.adapt)": [[5, "skmultilearn.adapt.MLkNN"]], "fit() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.fit"]], "fit() (skmultilearn.adapt.mltsvm method)": [[5, "skmultilearn.adapt.MLTSVM.fit"]], "fit() (skmultilearn.adapt.mlknn method)": [[5, "skmultilearn.adapt.MLkNN.fit"]], "predict() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.predict"]], "predict() (skmultilearn.adapt.mltsvm method)": [[5, "skmultilearn.adapt.MLTSVM.predict"]], "predict() (skmultilearn.adapt.mlknn method)": [[5, "skmultilearn.adapt.MLkNN.predict"]], "predict_proba() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.predict_proba"]], "predict_proba() (skmultilearn.adapt.mlknn method)": [[5, "skmultilearn.adapt.MLkNN.predict_proba"]], "reset() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.reset"]], "set_score_request() (skmultilearn.adapt.brknnaclassifier method)": [[5, "skmultilearn.adapt.BRkNNaClassifier.set_score_request"]], "set_score_request() (skmultilearn.adapt.brknnbclassifier method)": [[5, "skmultilearn.adapt.BRkNNbClassifier.set_score_request"]], "set_score_request() (skmultilearn.adapt.mlaram method)": [[5, "skmultilearn.adapt.MLARAM.set_score_request"]], "set_score_request() (skmultilearn.adapt.mltsvm method)": [[5, "skmultilearn.adapt.MLTSVM.set_score_request"]], "set_score_request() (skmultilearn.adapt.mlknn method)": [[5, "skmultilearn.adapt.MLkNN.set_score_request"]], "skmultilearn.adapt": [[5, "module-skmultilearn.adapt"]], "mlclassifierbase (class in skmultilearn.base)": [[6, "skmultilearn.base.MLClassifierBase"]], "problemtransformationbase (class in skmultilearn.base)": [[6, "skmultilearn.base.ProblemTransformationBase"]], "fit() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.fit"]], "get_params() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.get_params"]], "predict() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.predict"]], "set_params() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.set_params"]], "set_score_request() (skmultilearn.base.mlclassifierbase method)": [[6, "skmultilearn.base.MLClassifierBase.set_score_request"]], "set_score_request() (skmultilearn.base.problemtransformationbase method)": [[6, "skmultilearn.base.ProblemTransformationBase.set_score_request"]], "skmultilearn.base": [[6, "module-skmultilearn.base"]], "fixedlabelspaceclusterer (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.FixedLabelSpaceClusterer"]], "igraphlabelgraphclusterer (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.IGraphLabelGraphClusterer"]], "labelcooccurrencegraphbuilder (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.LabelCooccurrenceGraphBuilder"]], "matrixlabelspaceclusterer (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.MatrixLabelSpaceClusterer"]], "randomlabelspaceclusterer (class in skmultilearn.cluster)": [[7, "skmultilearn.cluster.RandomLabelSpaceClusterer"]], "fit_predict() (skmultilearn.cluster.fixedlabelspaceclusterer method)": [[7, "skmultilearn.cluster.FixedLabelSpaceClusterer.fit_predict"]], "fit_predict() (skmultilearn.cluster.igraphlabelgraphclusterer method)": [[7, "skmultilearn.cluster.IGraphLabelGraphClusterer.fit_predict"]], "fit_predict() (skmultilearn.cluster.matrixlabelspaceclusterer method)": [[7, "skmultilearn.cluster.MatrixLabelSpaceClusterer.fit_predict"]], "fit_predict() (skmultilearn.cluster.randomlabelspaceclusterer method)": [[7, "skmultilearn.cluster.RandomLabelSpaceClusterer.fit_predict"]], "skmultilearn.cluster": [[7, "module-skmultilearn.cluster"]], "transform() (skmultilearn.cluster.labelcooccurrencegraphbuilder method)": [[7, "skmultilearn.cluster.LabelCooccurrenceGraphBuilder.transform"]], "labelspacepartitioningclassifier (class in skmultilearn.ensemble)": [[9, "skmultilearn.ensemble.LabelSpacePartitioningClassifier"]], "majorityvotingclassifier (class in skmultilearn.ensemble)": [[9, "skmultilearn.ensemble.MajorityVotingClassifier"]], "rakeld (class in skmultilearn.ensemble)": [[9, "skmultilearn.ensemble.RakelD"]], "rakelo (class in skmultilearn.ensemble)": [[9, "skmultilearn.ensemble.RakelO"]], "fit() (skmultilearn.ensemble.rakeld method)": [[9, "skmultilearn.ensemble.RakelD.fit"]], "fit() (skmultilearn.ensemble.rakelo method)": [[9, "skmultilearn.ensemble.RakelO.fit"]], "predict() (skmultilearn.ensemble.labelspacepartitioningclassifier method)": [[9, "skmultilearn.ensemble.LabelSpacePartitioningClassifier.predict"]], "predict() (skmultilearn.ensemble.majorityvotingclassifier method)": [[9, "skmultilearn.ensemble.MajorityVotingClassifier.predict"]], "predict() (skmultilearn.ensemble.rakeld method)": [[9, "skmultilearn.ensemble.RakelD.predict"]], "predict() (skmultilearn.ensemble.rakelo method)": [[9, "skmultilearn.ensemble.RakelO.predict"]], "predict_proba() (skmultilearn.ensemble.majorityvotingclassifier method)": [[9, "skmultilearn.ensemble.MajorityVotingClassifier.predict_proba"]], "predict_proba() (skmultilearn.ensemble.rakeld method)": [[9, "skmultilearn.ensemble.RakelD.predict_proba"]], "predict_proba() (skmultilearn.ensemble.rakelo method)": [[9, "skmultilearn.ensemble.RakelO.predict_proba"]], "set_score_request() (skmultilearn.ensemble.labelspacepartitioningclassifier method)": [[9, "skmultilearn.ensemble.LabelSpacePartitioningClassifier.set_score_request"]], "set_score_request() (skmultilearn.ensemble.majorityvotingclassifier method)": [[9, "skmultilearn.ensemble.MajorityVotingClassifier.set_score_request"]], "set_score_request() (skmultilearn.ensemble.rakeld method)": [[9, "skmultilearn.ensemble.RakelD.set_score_request"]], "set_score_request() (skmultilearn.ensemble.rakelo method)": [[9, "skmultilearn.ensemble.RakelO.set_score_request"]], "skmultilearn.ensemble": [[9, "module-skmultilearn.ensemble"]], "smile (class in skmultilearn.missing)": [[11, "skmultilearn.missing.SMiLE"]], "fit() (skmultilearn.missing.smile method)": [[11, "skmultilearn.missing.SMiLE.fit"]], "getparams() (skmultilearn.missing.smile method)": [[11, "skmultilearn.missing.SMiLE.getParams"]], "predict() (skmultilearn.missing.smile method)": [[11, "skmultilearn.missing.SMiLE.predict"]], "setparams() (skmultilearn.missing.smile method)": [[11, "skmultilearn.missing.SMiLE.setParams"]], "skmultilearn.missing": [[11, "module-skmultilearn.missing"]], "skmultilearn.model_selection": [[12, "module-skmultilearn.model_selection"]], "binaryrelevance (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.BinaryRelevance"]], "classificationheterogeneousfeature (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature"]], "classifierchain (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.ClassifierChain"]], "instancebasedlogisticregression (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression"]], "labelpowerset (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.LabelPowerset"]], "structuredgridsearchcv (class in skmultilearn.problem_transform)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV"]], "find_optm_classifiers() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.find_optm_classifiers"]], "fit() (skmultilearn.problem_transform.binaryrelevance method)": [[13, "skmultilearn.problem_transform.BinaryRelevance.fit"]], "fit() (skmultilearn.problem_transform.classificationheterogeneousfeature method)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature.fit"]], "fit() (skmultilearn.problem_transform.classifierchain method)": [[13, "skmultilearn.problem_transform.ClassifierChain.fit"]], "fit() (skmultilearn.problem_transform.instancebasedlogisticregression method)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression.fit"]], "fit() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.fit"]], "fit() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.fit"]], "inverse_transform() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.inverse_transform"]], "predict() (skmultilearn.problem_transform.binaryrelevance method)": [[13, "skmultilearn.problem_transform.BinaryRelevance.predict"]], "predict() (skmultilearn.problem_transform.classificationheterogeneousfeature method)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature.predict"]], "predict() (skmultilearn.problem_transform.classifierchain method)": [[13, "skmultilearn.problem_transform.ClassifierChain.predict"]], "predict() (skmultilearn.problem_transform.instancebasedlogisticregression method)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression.predict"]], "predict() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.predict"]], "predict() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.predict"]], "predict_proba() (skmultilearn.problem_transform.binaryrelevance method)": [[13, "skmultilearn.problem_transform.BinaryRelevance.predict_proba"]], "predict_proba() (skmultilearn.problem_transform.classificationheterogeneousfeature method)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature.predict_proba"]], "predict_proba() (skmultilearn.problem_transform.classifierchain method)": [[13, "skmultilearn.problem_transform.ClassifierChain.predict_proba"]], "predict_proba() (skmultilearn.problem_transform.instancebasedlogisticregression method)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression.predict_proba"]], "predict_proba() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.predict_proba"]], "predict_proba() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.predict_proba"]], "set_fit_request() (skmultilearn.problem_transform.classifierchain method)": [[13, "skmultilearn.problem_transform.ClassifierChain.set_fit_request"]], "set_score_request() (skmultilearn.problem_transform.binaryrelevance method)": [[13, "skmultilearn.problem_transform.BinaryRelevance.set_score_request"]], "set_score_request() (skmultilearn.problem_transform.classificationheterogeneousfeature method)": [[13, "skmultilearn.problem_transform.ClassificationHeterogeneousFeature.set_score_request"]], "set_score_request() (skmultilearn.problem_transform.classifierchain method)": [[13, "skmultilearn.problem_transform.ClassifierChain.set_score_request"]], "set_score_request() (skmultilearn.problem_transform.instancebasedlogisticregression method)": [[13, "skmultilearn.problem_transform.InstanceBasedLogisticRegression.set_score_request"]], "set_score_request() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.set_score_request"]], "set_score_request() (skmultilearn.problem_transform.structuredgridsearchcv method)": [[13, "skmultilearn.problem_transform.StructuredGridSearchCV.set_score_request"]], "skmultilearn.problem_transform": [[13, "module-skmultilearn.problem_transform"]], "transform() (skmultilearn.problem_transform.labelpowerset method)": [[13, "skmultilearn.problem_transform.LabelPowerset.transform"]]}})